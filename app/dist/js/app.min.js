"use strict";

var app = angular.module("myApp", [ "highcharts-ng", "ngRoute", "firebase", "ui.bootstrap", "ui.router", "LocalStorageModule", "ngAnimate", "myApp.directives", "myApp.filters", "myApp.services", "myApp.controllers", "fcsa-number" ]).config([ "$urlRouterProvider", "$stateProvider", function($urlRouterProvider, $stateProvider) {
    $urlRouterProvider.otherwise("/home"), $stateProvider.state("home", {
        url: "/home",
        views: {
            mainView: {
                templateUrl: "partials/home.html"
            }
        }
    }), $stateProvider.state("info", {
        url: "/info",
        views: {
            mainView: {
                templateUrl: "partials/info.html"
            }
        }
    }), $stateProvider.state("auth", {
        url: "/auth",
        views: {
            mainView: {
                templateUrl: "partials/auth/form.html"
            }
        }
    }), $stateProvider.state("forgot-password", {
        url: "/forgot-password",
        views: {
            mainView: {
                templateUrl: "partials/auth/forgot-password.html"
            }
        }
    }), $stateProvider.state("change-password", {
        url: "/change-password",
        views: {
            mainView: {
                templateUrl: "partials/auth/change-password.html"
            }
        }
    }), $stateProvider.state("calculator", {
        "abstract": !0,
        url: "/calculator",
        views: {
            mainView: {
                templateUrl: "partials/calculator/calculator.html",
                controller: "CalcCtrl"
            },
            dataView: {
                templateUrl: "partials/results/chart_high.html"
            }
        }
    }), $stateProvider.state("calculator.index", {
        url: "",
        views: {
            mainView: {
                templateUrl: "partials/calculator/calculator.html",
                controller: "CalcCtrl"
            },
            dataView: {
                templateUrl: "partials/results/chart_high.html"
            }
        }
    }), $stateProvider.state("calculator.chart_high", {
        views: {
            mainView: {
                templateUrl: "partials/calculator/calculator.html",
                controller: "CalcCtrl"
            },
            dataView: {
                templateUrl: "partials/results/chart_high.html"
            }
        }
    }), $stateProvider.state("calculator.chart_low", {
        views: {
            mainView: {
                templateUrl: "partials/calculator/calculator.html",
                controller: "CalcCtrl"
            },
            dataView: {
                templateUrl: "partials/results/chart_low.html"
            }
        }
    }), $stateProvider.state("calculator.table", {
        views: {
            mainView: {
                templateUrl: "partials/calculator/calculator.html",
                controller: "CalcCtrl"
            },
            dataView: {
                templateUrl: "partials/results/table.html"
            }
        }
    }), $stateProvider.state("calculator.data", {
        views: {
            mainView: {
                templateUrl: "partials/calculator/calculator.html",
                controller: "CalcCtrl"
            },
            dataView: {
                templateUrl: "partials/calculator/_data.html"
            }
        }
    }), $stateProvider.state("clear-data", {
        url: "/clear-data",
        views: {
            mainView: {
                templateUrl: "partials/clear-data.html",
                controller: "ClearDataCtrl"
            }
        }
    }), $stateProvider.state("clear-data-confirm", {
        url: "/clear-data-confirm",
        views: {
            mainView: {
                templateUrl: "partials/clear-data-confirm.html",
                controller: "ClearDataCtrl"
            }
        }
    }), $stateProvider.state("saved-calculations", {
        url: "/saved-calculations",
        views: {
            mainView: {
                templateUrl: "partials/calculations/saved-calculations.html",
                controller: "ListSessionCtrl"
            }
        }
    }), $stateProvider.state("saved-calculations-detail", {
        url: "/saved-calculations/:id",
        views: {
            mainView: {
                templateUrl: "partials/calculations/saved-calculations-detail.html",
                controller: "SessionsDetailCtrl"
            }
        }
    }), $stateProvider.state("saved-calculations-detail.chart_high", {
        views: {
            mainView: {
                templateUrl: "partials/calculations/saved-calculations-detail.html",
                controller: "SessionsDetailCtrl"
            },
            dataView: {
                templateUrl: "partials/results/chart_high.html"
            }
        }
    }), $stateProvider.state("saved-calculations-detail.chart_low", {
        views: {
            mainView: {
                templateUrl: "partials/calculations/saved-calculations-detail.html",
                controller: "SessionsDetailCtrl"
            },
            dataView: {
                templateUrl: "partials/results/chart_low.html"
            }
        }
    }), $stateProvider.state("saved-calculations-detail.table", {
        views: {
            mainView: {
                templateUrl: "partials/calculations/saved-calculations-detail.html",
                controller: "SessionsDetailCtrl"
            },
            dataView: {
                templateUrl: "partials/results/table.html"
            }
        }
    }), $stateProvider.state("saved-calculations-detail.data", {
        views: {
            mainView: {
                templateUrl: "partials/calculations/saved-calculations-detail.html",
                controller: "SessionsDetailCtrl"
            },
            dataView: {
                templateUrl: "partials/calculator/_data.html"
            }
        }
    }), $stateProvider.state("save-calculation", {
        url: "/save-calculation",
        views: {
            mainView: {
                templateUrl: "partials/calculations/save-calculation.html",
                controller: "SaveSessionCtrl"
            }
        }
    }), $stateProvider.state("update-calculation", {
        url: "/update-calculation",
        views: {
            mainView: {
                templateUrl: "partials/calculations/update-calculation.html",
                controller: "UpdateSessionCtrl"
            }
        }
    }), $stateProvider.state("new-calculation", {
        url: "/new-calculation",
        views: {
            mainView: {
                templateUrl: "partials/calculations/new-calculation.html",
                controller: "NewSessionCtrl"
            }
        }
    });
} ]);

angular.module("myApp.directives", [ "LocalStorageModule" ]).directive("mainNav", function() {
    return {
        restrict: "A",
        templateUrl: "partials/global/nav-top.html"
    };
}).directive("navBottom", function() {
    return {
        restrict: "E",
        templateUrl: "partials/global/nav-bottom.html"
    };
}).directive("integer", function() {
    return {
        require: "ngModel",
        link: function(scope, ele, attr, ctrl) {
            ctrl.$parsers.unshift(function(viewValue) {
                return parseInt(viewValue);
            });
        }
    };
}).directive("contenteditable", [ "$sce", function($sce) {
    return {
        restrict: "A",
        require: "?ngModel",
        link: function(scope, element, attrs, ngModel) {
            function read() {
                var html = element.html();
                if (attrs.stripBr && "<br>" == html) html = "";
                ngModel.$setViewValue(html);
            }
            if (ngModel) ngModel.$render = function() {
                element.html($sce.getTrustedHtml(ngModel.$viewValue || ""));
            }, element.on("blur keyup change", function() {
                scope.$apply(read);
            }), read();
        }
    };
} ]).directive("services", [ function() {
    return {
        restrict: "E",
        templateUrl: "partials/calculator/_services.html"
    };
} ]).directive("calculations", [ function() {
    return {
        restrict: "E",
        templateUrl: "partials/calculations/_calculations.html"
    };
} ]).directive("chartlegend", [ function() {
    return {
        restrict: "E",
        templateUrl: "partials/results/_legend.html"
    };
} ]).directive("smallLoader", [ function() {
    return {
        restrict: "E",
        templateUrl: "partials/global/small-loader.html"
    };
} ]).directive("smartFloat", function() {
    var FLOAT_REGEXP = /^\-?\d+((\.|\,)\d+)?$/;
    return {
        require: "ngModel",
        link: function(scope, elm, attrs, ctrl) {
            ctrl.$parsers.unshift(function(viewValue) {
                if (FLOAT_REGEXP.test(viewValue)) if (ctrl.$setValidity("float", !0), "number" == typeof viewValue) return viewValue; else return parseFloat(viewValue.replace(",", ".")); else return void ctrl.$setValidity("float", !1);
            });
        }
    };
}), angular.module("myApp.filters", []).filter("reverse", function() {
    function toArray(list) {
        var k, out = [];
        if (list) if (angular.isArray(list)) out = list; else if ("object" == typeof list) for (k in list) if (list.hasOwnProperty(k)) out.push(list[k]);
        return out;
    }
    return function(items) {
        return toArray(items).slice().reverse();
    };
}).filter("commas", function() {
    return function(input) {
        input = input || "";
        var parts = input.toString().split(".");
        return parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ","), parts.join(".");
    };
}), angular.module("myApp.services", []).factory("infoData", function(localStorageService) {
    return localStorageService.get("info") ? localStorageService.get("info") : {};
}).factory("inputData", function(localStorageService) {
    if (!localStorageService.get("input")) return {
        services: {
            op1: null,
            op2: null,
            op3: null,
            op4: null,
            op5: null,
            op6: null,
            op7: null,
            op8: null,
            op9: null
        },
        param1: 0,
        param2: 0,
        param3: 0,
        param4: 0,
        param5: 0,
        param6: 0,
        param7: 0,
        param8: 0,
        param9: 0,
        param10: 0,
        adjustment: 0
    }; else return localStorageService.get("input");
}).factory("chartConfig", function() {
    Highcharts.setOptions({
        colors: [ "#E0586A", "#E05AAD", "#576CDF", "#5AAFE0", "#5DE08C", "#6DE05E", "#AFE05F", "#E1CE5F", "#E0895B" ]
    });
    var chartConfigTemplate = {
        currency: {
            currency: "USD",
            symbol: "$"
        },
        options: {
            chart: {
                type: "pie",
                backgroundColor: "rgba(255, 255, 255, 0)",
                plotBackgroundColor: "rgba(255, 255, 255, 0)"
            },
            plotOptions: {
                series: {
                    animation: !0
                },
                pie: {
                    allowPointSelect: !0,
                    cursor: "pointer",
                    dataLabels: {
                        enabled: !0,
                        formatter: function() {
                            if (0 != this.y) return "<b>" + this.point.name + "</b>: " + chartConfigTemplate.currency.symbol + this.point.y; else return null;
                        },
                        style: {
                            fontFamily: "Helvetica, Arial"
                        }
                    },
                    center: [ "50%", "50%" ]
                }
            },
            tooltip: {
                enabled: !0,
                formatter: function() {
                    if (0 != this.y) return "<b>" + this.point.name + "</b>: " + chartConfigTemplate.currency.symbol + this.point.y; else return null;
                }
            }
        },
        title: {
            text: 0
        },
        credits: {
            enabled: !1
        },
        series: [ {
            name: "High",
            data: [],
            innerSize: "30%",
            dataLabels: {
                style: {
                    fontWeight: "bold"
                }
            },
            point: {
                events: {
                    legendItemClick: function() {
                        return !1;
                    }
                }
            }
        }, {
            name: "Total",
            data: [ 0 ],
            size: "15%",
            dataLabels: {
                formatter: function() {
                    return this.y > 0 ? chartConfigTemplate.currency.symbol + this.point.y : null;
                },
                style: {
                    fontWeight: "bold",
                    color: "white",
                    fontSize: "18px",
                    textShadow: "0px 1px 2px black"
                },
                distance: -40
            },
            allowPointSelect: !1,
            enableMouseTracking: !1,
            borderWidth: 0,
            colors: [ "#006EAC" ]
        } ],
        yAxis: {
            min: 0,
            labels: {
                overflow: "justify"
            }
        }
    }, chartConfigHigh = chartConfigTemplate, chartConfigLow = chartConfigTemplate, chartConfigBar = chartConfigTemplate;
    return {
        high: chartConfigHigh,
        low: chartConfigLow,
        bar: chartConfigBar
    };
}).factory("chartData", function(localStorageService, chartConfig, allData) {
    return {
        chartObj: allData,
        dataSource: function(src) {
            return src;
        },
        chartData: function(va, src) {
            var chartArrayHigh = [], chartArrayLow = [];
            if (angular.forEach(this.dataSource(src), function(value) {
                var name;
                if (value.short_name) name = value.short_name; else name = value.name;
                chartArrayHigh.push([ name, value.high ]), chartArrayLow.push([ name, value.low ]);
            }), "high" === va) return chartArrayHigh; else return chartArrayLow;
        },
        chartTotal: function(va, src) {
            var chartTotalHigh = [], chartTotalLow = [], totalHigh = 0, totalLow = 0;
            if (angular.forEach(this.dataSource(src), function(value) {
                chartTotalHigh.push(value.high), chartTotalLow.push(value.low);
            }), angular.forEach(chartTotalHigh, function(value) {
                totalHigh += value;
            }), angular.forEach(chartTotalLow, function(value) {
                totalLow += value;
            }), "high" === va) return [ totalHigh ]; else return [ totalLow ];
        },
        currency: "$",
        drawChart: function(value, src) {
            if (chartConfig.low.currency.symbol = this.currency, chartConfig.high.currency.symbol = this.currency, 
            "low" === value) return chartConfig.low.options.chart.type = "pie", chartConfig.low.series[0].data = this.chartData("low", src), 
            chartConfig.low.series[1].data = this.chartTotal("low", src), chartConfig.low; else return chartConfig.high.options.chart.type = "pie", 
            chartConfig.high.series[0].data = this.chartData("high", src), chartConfig.high.series[1].data = this.chartTotal("high", src), 
            chartConfig.high;
        }
    };
}).factory("FbService", [ "$firebase", function($firebase) {
    var ref = new Firebase("https://luminous-fire-1327.firebaseio.com/sita");
    return $firebase(ref);
} ]).factory("FbService2", [ "$firebase", function($firebase) {
    var ref = new Firebase("https://luminous-fire-1327.firebaseio.com/text");
    return $firebase(ref);
} ]).factory("Authorisation", [ "$firebaseAuth", function($firebaseAuth) {
    var ref = new Firebase("https://luminous-fire-1327.firebaseio.com/");
    return $firebaseAuth(ref);
} ]).factory("authData", [ "Authorisation", function() {
    var fb_base_url = "https://luminous-fire-1327.firebaseio.com", auth_ref = new Firebase(fb_base_url), authData = auth_ref.getAuth();
    return authData;
} ]).factory("passengersBoardedData", function() {
    var cost_per_pb = {
        core_passenger_services_cost_per_pb: {
            name: "Core passenger services cost per PB (Res, ticketing, fares, DCS)",
            cost_per_pb: {
                current_provider: 1.2,
                sita: .8
            }
        },
        direct_dist_costs_per_pb: {
            name: "Direct distribution costs per PB",
            current_channel_mix_total: 0,
            channel_shift_over_5_yrs_total: 0,
            steady_state_channel_mix_total: 0,
            call_centre: {
                name: "Call centre",
                cost_per_pb: {
                    current_provider: 1.21,
                    sita: 1.21
                },
                channel: function() {
                    var n = {
                        current_channel_mix: 10,
                        channel_shift_over_5_yrs: 0
                    };
                    return {
                        current_channel_mix: n.current_channel_mix,
                        channel_shift_over_5_yrs: n.channel_shift_over_5_yrs,
                        steady_state_channel_mix: n.current_channel_mix + n.channel_shift_over_5_yrs
                    };
                }()
            },
            ecommerce: {
                name: "Ecommerce",
                cost_per_pb: {
                    current_provider: 1,
                    sita: 1
                },
                channel: function() {
                    var n = {
                        current_channel_mix: 7,
                        channel_shift_over_5_yrs: 6
                    };
                    return {
                        current_channel_mix: n.current_channel_mix,
                        channel_shift_over_5_yrs: n.channel_shift_over_5_yrs,
                        steady_state_channel_mix: n.current_channel_mix + n.channel_shift_over_5_yrs
                    };
                }()
            },
            travel_agent: {
                name: "Travel agent/OTA/Corporate direct (split GUI/API)",
                cost_per_pb: {
                    current_provider: 1,
                    sita: 1
                },
                channel: function() {
                    var n = {
                        current_channel_mix: 0,
                        channel_shift_over_5_yrs: 0
                    };
                    return {
                        current_channel_mix: n.current_channel_mix,
                        channel_shift_over_5_yrs: n.channel_shift_over_5_yrs,
                        steady_state_channel_mix: n.current_channel_mix + n.channel_shift_over_5_yrs
                    };
                }()
            },
            mobile: {
                name: "Mobile",
                cost_per_pb: {
                    current_provider: 1,
                    sita: 1
                },
                channel: function() {
                    var n = {
                        current_channel_mix: 0,
                        channel_shift_over_5_yrs: 2
                    };
                    return {
                        current_channel_mix: n.current_channel_mix,
                        channel_shift_over_5_yrs: n.channel_shift_over_5_yrs,
                        steady_state_channel_mix: n.current_channel_mix + n.channel_shift_over_5_yrs
                    };
                }()
            }
        },
        indirect_dist_costs_per_pb: {
            name: "Indirect disribution costs per PB",
            current_channel_mix_total: 0,
            channel_shift_over_5_yrs_total: 0,
            steady_state_channel_mix_total: 0,
            amadeus: {
                name: "Amadeus",
                cost_per_pb: {
                    current_provider: 5.1,
                    sita: 5.1
                },
                channel: function() {
                    var n = {
                        current_channel_mix: 53,
                        channel_shift_over_5_yrs: -2
                    };
                    return {
                        current_channel_mix: n.current_channel_mix,
                        channel_shift_over_5_yrs: n.channel_shift_over_5_yrs,
                        steady_state_channel_mix: n.current_channel_mix + n.channel_shift_over_5_yrs
                    };
                }()
            },
            sabre: {
                name: "sabre",
                cost_per_pb: {
                    current_provider: 5.1,
                    sita: 5.1
                },
                channel: function() {
                    var n = {
                        current_channel_mix: 15,
                        channel_shift_over_5_yrs: -1
                    };
                    return {
                        current_channel_mix: n.current_channel_mix,
                        channel_shift_over_5_yrs: n.channel_shift_over_5_yrs,
                        steady_state_channel_mix: n.current_channel_mix + n.channel_shift_over_5_yrs
                    };
                }()
            },
            galileo: {
                name: "Galileo",
                cost_per_pb: {
                    current_provider: 5.1,
                    sita: 5.1
                },
                channel: function() {
                    var n = {
                        current_channel_mix: 15,
                        channel_shift_over_5_yrs: -5
                    };
                    return {
                        current_channel_mix: n.current_channel_mix,
                        channel_shift_over_5_yrs: n.channel_shift_over_5_yrs,
                        steady_state_channel_mix: n.current_channel_mix + n.channel_shift_over_5_yrs
                    };
                }()
            },
            abacus: {
                name: "Abacus",
                cost_per_pb: {
                    current_provider: 5.1,
                    sita: 5.1
                },
                channel: function() {
                    var n = {
                        current_channel_mix: 0,
                        channel_shift_over_5_yrs: 0
                    };
                    return {
                        current_channel_mix: n.current_channel_mix,
                        channel_shift_over_5_yrs: n.channel_shift_over_5_yrs,
                        steady_state_channel_mix: n.current_channel_mix + n.channel_shift_over_5_yrs
                    };
                }()
            }
        }
    }, directDistChannelTotals = function(column) {
        var c = cost_per_pb.direct_dist_costs_per_pb;
        return c.call_centre.channel[column] + c.ecommerce.channel[column] + c.travel_agent.channel[column] + c.mobile.channel[column];
    };
    cost_per_pb.direct_dist_costs_per_pb.current_channel_mix_total = directDistChannelTotals("current_channel_mix"), 
    cost_per_pb.direct_dist_costs_per_pb.channel_shift_over_5_yrs_total = directDistChannelTotals("channel_shift_over_5_yrs"), 
    cost_per_pb.direct_dist_costs_per_pb.steady_state_channel_mix_total = directDistChannelTotals("steady_state_channel_mix");
    var indirectDistChannelTotals = function(column) {
        var c = cost_per_pb.indirect_dist_costs_per_pb;
        return c.amadeus.channel[column] + c.sabre.channel[column] + c.galileo.channel[column] + c.abacus.channel[column];
    };
    cost_per_pb.indirect_dist_costs_per_pb.current_channel_mix_total = indirectDistChannelTotals("current_channel_mix"), 
    cost_per_pb.indirect_dist_costs_per_pb.channel_shift_over_5_yrs_total = indirectDistChannelTotals("channel_shift_over_5_yrs"), 
    cost_per_pb.indirect_dist_costs_per_pb.steady_state_channel_mix_total = indirectDistChannelTotals("steady_state_channel_mix");
    directDistChannelTotals("current_channel_mix") + indirectDistChannelTotals("current_channel_mix"), 
    directDistChannelTotals("channel_shift_over_5_yrs") + indirectDistChannelTotals("channel_shift_over_5_yrs"), 
    directDistChannelTotals("steady_state_channel_mix") + indirectDistChannelTotals("steady_state_channel_mix");
    return cost_per_pb;
}).factory("allData", function() {
    return {
        airfare_insight: {
            name: "Airfare Insight",
            short_name: "AI",
            high: 0,
            low: 0,
            summary: {}
        },
        ancillary_sales: {
            name: "Ancillary Sales",
            short_name: "AS",
            high: 0,
            low: 0,
            summary: {}
        },
        arr: {
            name: "ARR",
            short_name: "ARR",
            high: 0,
            low: 0,
            summary: {}
        },
        channel_shift: {
            name: "Channel Shift",
            short_name: "CS",
            high: 0,
            low: 0,
            summary: {}
        },
        cmap: {
            name: "Weight and Balance",
            short_name: "W&B",
            high: 0,
            low: 0,
            summary: {}
        },
        origin_and_destination: {
            name: "Origin and Destination",
            short_name: "O&D",
            high: 0,
            low: 0,
            summary: {}
        },
        pos: {
            name: "Point of Sale",
            short_name: "POS",
            high: 0,
            low: 0,
            summary: {}
        },
        revenue_integrity: {
            name: "Revenue Integrity",
            short_name: "RI",
            high: 0,
            low: 0,
            summary: {}
        },
        revenue_integrity_process_improvement: {
            name: "Revenue Integrity Process Improvement",
            short_name: "RIPI",
            high: 0,
            low: 0,
            summary: {}
        }
    };
}).factory("revenueIntegrity", function(inputData, allData) {
    return {
        REVENUE_IMPROVEMENT_HIGH: 1,
        REVENUE_IMPROVEMENT_LOW: .1,
        COST_SAVING_HIGH: 5,
        COST_SAVING_LOW: 3,
        REAL_TIME_HIGH: 2,
        REAL_TIME_LOW: 1,
        revenue: function() {
            return inputData.param6;
        },
        distribution_costs: function() {
            return inputData.param7 * (inputData.param8 / 100);
        },
        revenue_improvement: function(value) {
            if ("low" === value) return this.REVENUE_IMPROVEMENT_LOW / 100; else return this.REVENUE_IMPROVEMENT_HIGH / 100;
        },
        value_1: function(value) {
            return this.revenue_improvement(value) * this.revenue();
        },
        cost_saving: function(value) {
            if ("low" === value) return this.COST_SAVING_LOW / 100; else return this.COST_SAVING_HIGH / 100;
        },
        value_2: function(value) {
            return this.cost_saving(value) * this.distribution_costs();
        },
        real_time: function(value) {
            if ("low" === value) return this.REAL_TIME_LOW / 100; else return this.REAL_TIME_HIGH / 100;
        },
        wtf_1: function(value) {
            return this.real_time(value) * this.revenue();
        },
        total: function(value) {
            return this.wtf_1(value) + this.value_2(value) + this.value_1(value);
        },
        initObject: function() {
            if (inputData.services && !inputData.services.op1) return allData.revenue_integrity.high = 0, 
            void (allData.revenue_integrity.low = 0); else return allData.revenue_integrity.high = this.result(), 
            allData.revenue_integrity.low = this.result("low"), void (allData.revenue_integrity.summary = {
                revenue: {
                    name: "Revenue",
                    unit: "currency",
                    high: this.revenue(),
                    low: this.revenue()
                },
                dist_costs: {
                    name: "Distribution costs",
                    unit: "currency",
                    high: this.distribution_costs().toFixed(2),
                    low: this.distribution_costs().toFixed(2)
                },
                revenue_improvement: {
                    name: "Revenue improvement",
                    unit: "percentage",
                    high: this.REVENUE_IMPROVEMENT_HIGH,
                    low: this.REVENUE_IMPROVEMENT_LOW
                },
                value_1: {
                    name: "Value 1",
                    unit: "currency",
                    high: this.value_1("high").toFixed(2),
                    low: this.value_1("low").toFixed(2)
                },
                cost_saving: {
                    name: "Cost saving",
                    unit: "percentage",
                    high: this.COST_SAVING_HIGH,
                    low: this.COST_SAVING_LOW
                },
                value_2: {
                    name: "Value 2",
                    unit: "currency",
                    high: this.value_2("high").toFixed(2),
                    low: this.value_2("low").toFixed(2)
                },
                real_time: {
                    name: "Real-time",
                    unit: "percentage",
                    high: this.REAL_TIME_HIGH,
                    low: this.REAL_TIME_LOW
                },
                wtf_1: {
                    name: "*",
                    unit: "currency",
                    high: this.wtf_1("high").toFixed(2),
                    low: this.wtf_1("low").toFixed(2)
                },
                total: {
                    name: "Total",
                    unit: "currency",
                    high: this.total("high").toFixed(2),
                    low: this.total("low").toFixed(2)
                }
            });
        },
        result: function(value) {
            return Math.round((this.real_time(value) * inputData.param6 + this.cost_saving(value) * (inputData.param7 * inputData.param8 / 100) + this.revenue_improvement(value) * inputData.param6) / inputData.adjustment);
        }
    };
}).factory("revenueIntegrityProcessImprovement", function(inputData, allData) {
    return {
        current_PB_LIVE_IN_SYSTEM: 3.6 / 100,
        MISC_CONST_1: 1.8,
        MISC_CONST_2: 1.6,
        CANCEL_1: 34e-6,
        QUEUE: .024916,
        APPLY_TTL: .230518,
        CANCEL_2: 2.3052 / 100,
        CANCEL_3: .00133,
        CANCEL_4: .010752,
        CANCEL_5: .0012 / 100,
        CANCEL_6: .054547,
        CANCEL_7: .6698 / 100,
        MISC_CONST_3: .1,
        MISC_CONST_4: .05,
        MISC_CONST_5: 12,
        MISC_CONST_6: .03,
        MISC_CONST_7: .2,
        MISC_CONST_8: .1,
        MISC_CONST_9: 450,
        MISC_CONST_10: 2,
        pnrs: function() {
            return Math.round(inputData.param1 * this.current_PB_LIVE_IN_SYSTEM);
        },
        segments: function() {
            return this.pnrs() * this.MISC_CONST_1;
        },
        passengers: function() {
            return this.pnrs() * this.MISC_CONST_2;
        },
        av_psj_per_pnr: function() {
            return parseFloat(this.segments() / this.pnrs() * this.passengers() / this.pnrs()).toFixed(2);
        },
        psj: function() {
            return Math.round(this.av_psj_per_pnr() * this.pnrs());
        },
        total_checks: function(value) {
            var g30 = this.psj(value) * this.CANCEL_1, g31 = this.psj(value) * this.QUEUE, g32 = this.psj(value) * this.APPLY_TTL, g33 = this.psj(value) * this.CANCEL_2, g34 = this.psj(value) * this.CANCEL_3, g35 = this.psj(value) * this.CANCEL_4, g36 = this.psj(value) * this.CANCEL_5, g37 = this.psj(value) * this.CANCEL_6, g38 = this.psj(value) * this.CANCEL_7;
            if ("low" === value) g30 /= 2, g31 /= 2, g32 /= 2, g33 /= 2, g34 /= 2, g35 /= 2;
            return Math.round(g30 + g31 + g32 + g33 + g34 + g35 + g36 + g37 + g38);
        },
        seats_resold: function(value) {
            if ("low" === value) return Math.round(this.MISC_CONST_4 * this.total_checks(value)); else return Math.round(this.MISC_CONST_3 * this.total_checks(value));
        },
        additional_revenue: function(value) {
            return Math.round(inputData.param9 * this.seats_resold(value));
        },
        annual_additional_revenue: function(value) {
            return this.additional_revenue(value) * this.MISC_CONST_5;
        },
        no_show_per_annum: function() {
            return Math.round(this.MISC_CONST_6 * inputData.param1);
        },
        no_shows_avoided: function(value) {
            if ("low" === value) return this.no_show_per_annum() * this.MISC_CONST_8; else return this.no_show_per_annum() * this.MISC_CONST_7;
        },
        gds_cost_reduction: function(value) {
            return this.MISC_CONST_9 * this.no_shows_avoided(value);
        },
        process_improvement: function(value) {
            return Math.round(this.annual_additional_revenue(value) + this.gds_cost_reduction(value) / this.MISC_CONST_10);
        },
        initObject: function() {
            if (inputData.services && !inputData.services.op2) return allData.revenue_integrity_process_improvement.high = 0, 
            allData.revenue_integrity_process_improvement.low = 0, void (allData.revenue_integrity_process_improvement.summary = {}); else return allData.revenue_integrity_process_improvement.high = this.result(), 
            allData.revenue_integrity_process_improvement.low = this.result("low"), void (allData.revenue_integrity_process_improvement.summary = {
                pnrs: {
                    name: "PNRS",
                    high: this.pnrs(),
                    low: this.pnrs()
                },
                segments: {
                    name: "Segments",
                    high: this.segments(),
                    low: this.segments()
                },
                passengers: {
                    name: "Passengers",
                    high: this.passengers(),
                    low: this.passengers()
                },
                av_psj_per_pnr: {
                    name: "Average PSJ per PNR",
                    high: this.av_psj_per_pnr(),
                    low: this.av_psj_per_pnr()
                },
                psj: {
                    name: "PSJ",
                    high: this.psj(),
                    low: this.psj()
                },
                total_checks: {
                    name: "Total",
                    high: this.total_checks(),
                    low: this.total_checks("low")
                },
                seats_resold: {
                    name: "Seats resold",
                    high: this.seats_resold(),
                    low: this.seats_resold("low")
                },
                additional_revenue: {
                    name: "Additional revenue",
                    high: this.additional_revenue(),
                    low: this.additional_revenue("low")
                },
                annual_additional_revenue: {
                    name: "Annual additional revenue",
                    high: this.annual_additional_revenue(),
                    low: this.annual_additional_revenue("low")
                },
                no_show_per_annum: {
                    name: "No show per annum",
                    high: this.no_show_per_annum(),
                    low: this.no_show_per_annum("low")
                },
                no_shows_avoided: {
                    name: "No shows avoided",
                    high: this.no_shows_avoided(),
                    low: this.no_shows_avoided("low")
                },
                gds_cost_reduction: {
                    name: "GDS cost reduction",
                    high: this.gds_cost_reduction(),
                    low: this.gds_cost_reduction("low")
                },
                process_improvement: {
                    name: "Process improvement",
                    high: this.process_improvement(),
                    low: this.process_improvement("low")
                }
            });
        },
        result: function(value) {
            return Math.round(this.process_improvement(value) / inputData.adjustment);
        }
    };
}).factory("cmap", function(inputData, allData) {
    return {
        MISC_CONST_1: .005,
        MISC_CONST_2: .0025,
        MISC_CONST_3: .01,
        MISC_CONST_4: .005,
        fuel_cost: function() {
            return Math.round(inputData.param10 / 100 * inputData.param7);
        },
        cmap_savings: function(value) {
            if ("low" === value) return this.fuel_cost() * this.MISC_CONST_2; else return this.fuel_cost() * this.MISC_CONST_1;
        },
        portable_water: function(value) {
            if ("low" === value) return this.fuel_cost() * this.MISC_CONST_4; else return this.fuel_cost() * this.MISC_CONST_3;
        },
        initObject: function() {
            if (inputData.services && !inputData.services.op5) return allData.cmap.high = 0, 
            allData.cmap.low = 0, void (allData.cmap.summary = {}); else return allData.cmap.high = this.result(), 
            allData.cmap.low = this.result("low"), allData.cmap.fuel_cost = {
                name: "Fuel cost",
                value: this.fuel_cost()
            }, void (allData.cmap.summary = {
                cmap_savings: {
                    name: "CMAP savings",
                    high: this.cmap_savings(),
                    low: this.cmap_savings("low")
                },
                portable_water: {
                    name: "Portable water",
                    high: this.portable_water(),
                    low: this.portable_water("low")
                }
            });
        },
        result: function(value) {
            return Math.round(this.cmap_savings(value) / inputData.adjustment);
        }
    };
}).factory("originAndDestination", function(inputData, allData) {
    return {
        MISC_CONST_1: .02,
        MISC_CONST_2: .01,
        revenue: function() {
            return inputData.param6;
        },
        os_impact: function(value) {
            if ("low" === value) return this.revenue() * this.MISC_CONST_2; else return this.revenue() * this.MISC_CONST_1;
        },
        initObject: function() {
            if (inputData.services && !inputData.services.op6) return allData.origin_and_destination.high = 0, 
            allData.origin_and_destination.low = 0, void (allData.origin_and_destination.summary = {}); else return allData.origin_and_destination.high = this.result("high"), 
            allData.origin_and_destination.low = this.result("low"), allData.origin_and_destination.revenue = this.revenue(), 
            void (allData.origin_and_destination.summary = {
                os_impact: {
                    name: "O&S Impact",
                    high: this.os_impact("high"),
                    low: this.os_impact("low")
                }
            });
        },
        result: function(value) {
            return Math.round(this.os_impact(value) / inputData.adjustment);
        }
    };
}).factory("pointOfSale", function(inputData, allData) {
    return {
        MISC_CONST_1: .005,
        MISC_CONST_2: .0025,
        revenue: function() {
            return inputData.param6;
        },
        os_impact: function(value) {
            if ("low" === value) return this.revenue() * this.MISC_CONST_2; else return this.revenue() * this.MISC_CONST_1;
        },
        initObject: function() {
            if (inputData.services && !inputData.services.op7) return allData.pos.high = 0, 
            allData.pos.low = 0, void (allData.pos.summary = {}); else return allData.pos.high = this.result("high"), 
            allData.pos.low = this.result("low"), allData.pos.revenue = this.revenue(), void (allData.pos.summary = {
                os_impact: {
                    name: "O&S Impact",
                    high: this.os_impact("high"),
                    low: this.os_impact("low")
                }
            });
        },
        result: function(value) {
            return Math.round(this.os_impact(value) / inputData.adjustment);
        }
    };
}).factory("arr", function(inputData, allData, passengersBoardedData) {
    return {
        TIME_TO_MANUALLY_REISSUE_TICKET_HIGH: 30,
        TIME_TO_MANUALLY_REISSUE_TICKET_LOW: 20,
        MISC_PERCENTAGE_1: .1,
        MISC_PERCENTAGE_2: .2,
        totalTicketsIssued: function() {
            return inputData.param3;
        },
        ticketsIssuedByDirectChannels: function() {
            return this.totalTicketsIssued() * (passengersBoardedData.direct_dist_costs_per_pb.steady_state_channel_mix_total / 100);
        },
        ticketsReissued: function() {
            return inputData.param4;
        },
        totalTicketsReissued: function() {
            return this.ticketsIssuedByDirectChannels() * (this.ticketsReissued() / 100);
        },
        averageLabourCost: function() {
            return parseInt(inputData.param5, 10).toFixed(2);
        },
        timeToIssueManualReissue: function(value) {
            if ("low" === value) return this.TIME_TO_MANUALLY_REISSUE_TICKET_LOW; else return this.TIME_TO_MANUALLY_REISSUE_TICKET_HIGH;
        },
        timeToIssueAutoReissue: function(value) {
            if ("low" === value) return Math.round(this.timeToIssueManualReissue(value) * this.MISC_PERCENTAGE_2); else return Math.round(this.timeToIssueManualReissue(value) * this.MISC_PERCENTAGE_1);
        },
        timeSavedPerTicket: function(value) {
            if ("low" === value) return this.TIME_TO_MANUALLY_REISSUE_TICKET_LOW - this.timeToIssueAutoReissue(value); else return this.TIME_TO_MANUALLY_REISSUE_TICKET_HIGH - this.timeToIssueAutoReissue(value);
        },
        costSavingPerReissue: function(value) {
            return this.timeSavedPerTicket(value) * this.averageLabourCost();
        },
        totalCostSaving: function(value) {
            return Math.round(this.costSavingPerReissue(value) * this.totalTicketsReissued());
        },
        initObject: function() {
            if (inputData.services && !inputData.services.op9) return allData.arr.high = 0, 
            allData.arr.low = 0, void (allData.arr.summary = {}); else return allData.arr.high = this.result(), 
            allData.arr.low = this.result("low"), void (allData.arr.summary = {
                total_tickets_issued: {
                    name: "Total number of tickets issued",
                    high: this.totalTicketsIssued(),
                    low: this.totalTicketsIssued()
                },
                tickets_issued_by_direct_channels: {
                    name: "Tickets issued through direct channels",
                    high: Math.round(this.ticketsIssuedByDirectChannels()),
                    low: Math.round(this.ticketsIssuedByDirectChannels())
                },
                tickets_reissued: {
                    name: "Tickets reissued",
                    unit: "percentage",
                    high: this.ticketsReissued(),
                    low: this.ticketsReissued()
                },
                total_tickets_reissued: {
                    name: "Total tickets reissued",
                    high: Math.round(this.totalTicketsReissued()),
                    low: Math.round(this.totalTicketsReissued())
                },
                average_labour_cost: {
                    name: "Average labour cost",
                    unit: "currency",
                    high: this.averageLabourCost(),
                    low: this.averageLabourCost()
                },
                time_to_issue_manual_reissue: {
                    name: "Time to manually reissue a ticket (mins)",
                    unit: "minutes",
                    high: this.timeToIssueManualReissue("high"),
                    low: this.timeToIssueManualReissue("low")
                },
                time_to_issue_auto_reissue: {
                    name: "Time to issue automated reissue",
                    unit: "minutes",
                    high: this.timeToIssueAutoReissue("high"),
                    low: this.timeToIssueAutoReissue("low")
                },
                time_saved_per_ticket: {
                    name: "Time saved per ticket",
                    unit: "minutes",
                    high: this.timeSavedPerTicket("high"),
                    low: this.timeSavedPerTicket("low")
                },
                cost_saving_per_reissue: {
                    name: "Cost saving per reissue",
                    unit: "currency",
                    high: this.costSavingPerReissue("high"),
                    low: this.costSavingPerReissue("low")
                },
                total_cost_saving: {
                    name: "Total cost saving",
                    unit: "currency",
                    high: Math.round(this.totalCostSaving("high")),
                    low: Math.round(this.totalCostSaving("low"))
                }
            });
        },
        result: function(value) {
            return Math.round(this.totalCostSaving(value) / inputData.adjustment);
        }
    };
}).factory("airfareInsight", function(inputData, allData) {
    return {
        AIRFARE_INSIGHT_PERC_HIGH: 1,
        AIRFARE_INSIGHT_PERC_LOW: .5,
        airfareInsight: function(value) {
            if ("low" === value) return inputData.param6 * (this.AIRFARE_INSIGHT_PERC_LOW / 100); else return inputData.param6 * (this.AIRFARE_INSIGHT_PERC_HIGH / 100);
        },
        initObject: function() {
            if (inputData.services && !inputData.services.op8) return allData.airfare_insight.high = 0, 
            allData.airfare_insight.low = 0, void (allData.airfare_insight.summary = {}); else return allData.airfare_insight.high = this.result(), 
            allData.airfare_insight.low = this.result("low"), void (allData.airfare_insight.summary = {
                percentages: {
                    name: "Percentages",
                    unit: "percentage",
                    high: this.AIRFARE_INSIGHT_PERC_HIGH,
                    low: this.AIRFARE_INSIGHT_PERC_LOW
                },
                airfare_insight: {
                    name: "Airfare Insight",
                    unit: "currency",
                    high: this.airfareInsight("high").toFixed(2),
                    low: this.airfareInsight("low").toFixed(2)
                }
            });
        },
        result: function(value) {
            return Math.round(this.airfareInsight(value) / inputData.adjustment);
        }
    };
}).factory("channelShift", function(inputData, allData, passengersBoardedData) {
    return {
        CURRENT__PAX_BOARDED__TOTAL: 1250355,
        EXPECTED_PAX_GROWTH_PER_YEAR: inputData.param2 / 100,
        CURRENT__PAX_BOARDED__TOTAL_ETICKETS_ISSUED: 1856002,
        CURRENT__PAX_BOARDED__TOTAL_EMDS_ISSUED: 102245,
        CURRENT__PAX_BOARDED__TOTAL_REISSUES: 25665,
        CURRENT__PAX_BOARDED__TOTAL_OTHER_AIRLINES_BOOKED: 65871,
        PSS: {
            CURRENT_PROVIDER: passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.current_provider,
            SITA: passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.sita
        },
        calcFunctions: function() {},
        totals: function() {
            var total_passengers_boarded__current = this.CURRENT__PAX_BOARDED__TOTAL, total_passengers_boarded__year_1 = Math.round(total_passengers_boarded__current + total_passengers_boarded__current * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_passengers_boarded__year_2 = Math.round(total_passengers_boarded__year_1 + total_passengers_boarded__year_1 * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_passengers_boarded__year_3 = Math.round(total_passengers_boarded__year_2 + total_passengers_boarded__year_2 * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_passengers_boarded__year_4 = Math.round(total_passengers_boarded__year_3 + total_passengers_boarded__year_3 * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_passengers_boarded__year_5 = Math.round(total_passengers_boarded__year_4 + total_passengers_boarded__year_4 * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_etickets_issued__current = this.CURRENT__PAX_BOARDED__TOTAL_ETICKETS_ISSUED, total_etickets_issued__year_1 = Math.round(total_etickets_issued__current + total_etickets_issued__current * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_etickets_issued__year_2 = Math.round(total_etickets_issued__year_1 + total_etickets_issued__year_1 * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_etickets_issued__year_3 = Math.round(total_etickets_issued__year_2 + total_etickets_issued__year_2 * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_etickets_issued__year_4 = Math.round(total_etickets_issued__year_3 + total_etickets_issued__year_3 * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_etickets_issued__year_5 = Math.round(total_etickets_issued__year_4 + total_etickets_issued__year_4 * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_emds_issued__current = this.CURRENT__PAX_BOARDED__TOTAL_EMDS_ISSUED, total_emds_issued__year_1 = Math.round(total_emds_issued__current + total_emds_issued__current * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_emds_issued__year_2 = Math.round(total_emds_issued__year_1 + total_emds_issued__year_1 * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_emds_issued__year_3 = Math.round(total_emds_issued__year_2 + total_emds_issued__year_2 * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_emds_issued__year_4 = Math.round(total_emds_issued__year_3 + total_emds_issued__year_3 * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_emds_issued__year_5 = Math.round(total_emds_issued__year_4 + total_emds_issued__year_4 * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_reissues__current = this.CURRENT__PAX_BOARDED__TOTAL_REISSUES, total_reissues__year_1 = Math.round(total_reissues__current + total_reissues__current * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_reissues__year_2 = Math.round(total_reissues__year_1 + total_reissues__year_1 * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_reissues__year_3 = Math.round(total_reissues__year_2 + total_reissues__year_2 * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_reissues__year_4 = Math.round(total_reissues__year_3 + total_reissues__year_3 * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_reissues__year_5 = Math.round(total_reissues__year_4 + total_reissues__year_4 * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_other_airlines_booked__current = this.CURRENT__PAX_BOARDED__TOTAL_OTHER_AIRLINES_BOOKED, total_other_airlines_booked__year_1 = Math.round(total_other_airlines_booked__current + total_other_airlines_booked__current * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_other_airlines_booked__year_2 = Math.round(total_other_airlines_booked__year_1 + total_other_airlines_booked__year_1 * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_other_airlines_booked__year_3 = Math.round(total_other_airlines_booked__year_2 + total_other_airlines_booked__year_2 * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_other_airlines_booked__year_4 = Math.round(total_other_airlines_booked__year_3 + total_other_airlines_booked__year_3 * this.EXPECTED_PAX_GROWTH_PER_YEAR), total_other_airlines_booked__year_5 = Math.round(total_other_airlines_booked__year_4 + total_other_airlines_booked__year_4 * this.EXPECTED_PAX_GROWTH_PER_YEAR);
            return {
                total_passengers_boarded: {
                    current: total_passengers_boarded__current,
                    year_1: total_passengers_boarded__year_1,
                    year_2: total_passengers_boarded__year_2,
                    year_3: total_passengers_boarded__year_3,
                    year_4: total_passengers_boarded__year_4,
                    year_5: total_passengers_boarded__year_5
                },
                expected_passenger_growth_per_year: {
                    current: this.EXPECTED_PAX_GROWTH_PER_YEAR,
                    year_1: this.EXPECTED_PAX_GROWTH_PER_YEAR,
                    year_2: this.EXPECTED_PAX_GROWTH_PER_YEAR,
                    year_3: this.EXPECTED_PAX_GROWTH_PER_YEAR,
                    year_4: this.EXPECTED_PAX_GROWTH_PER_YEAR,
                    year_5: this.EXPECTED_PAX_GROWTH_PER_YEAR
                },
                total_etickets_issued: {
                    current: total_etickets_issued__current,
                    year_1: total_etickets_issued__year_1,
                    year_2: total_etickets_issued__year_2,
                    year_3: total_etickets_issued__year_3,
                    year_4: total_etickets_issued__year_4,
                    year_5: total_etickets_issued__year_5
                },
                total_emds_issued: {
                    current: total_emds_issued__current,
                    year_1: total_emds_issued__year_1,
                    year_2: total_emds_issued__year_2,
                    year_3: total_emds_issued__year_3,
                    year_4: total_emds_issued__year_4,
                    year_5: total_emds_issued__year_5
                },
                total_reissues: {
                    current: total_reissues__current,
                    year_1: total_reissues__year_1,
                    year_2: total_reissues__year_2,
                    year_3: total_reissues__year_3,
                    year_4: total_reissues__year_4,
                    year_5: total_reissues__year_5
                },
                total_other_airlines_booked: {
                    current: total_other_airlines_booked__current,
                    year_1: total_other_airlines_booked__year_1,
                    year_2: total_other_airlines_booked__year_2,
                    year_3: total_other_airlines_booked__year_3,
                    year_4: total_other_airlines_booked__year_4,
                    year_5: total_other_airlines_booked__year_5
                }
            };
        },
        direct: function() {
            var pax_boarded_1 = Math.round(passengersBoardedData.direct_dist_costs_per_pb.call_centre.channel.current_channel_mix / 100 * this.totals().total_passengers_boarded.current), pax_boarded_2 = Math.round(passengersBoardedData.direct_dist_costs_per_pb.ecommerce.channel.current_channel_mix / 100 * this.totals().total_passengers_boarded.current), pax_boarded_3 = Math.round(passengersBoardedData.direct_dist_costs_per_pb.travel_agent.channel.current_channel_mix / 100 * this.totals().total_passengers_boarded.current), pax_boarded_4 = Math.round(passengersBoardedData.direct_dist_costs_per_pb.mobile.channel.current_channel_mix / 100 * this.totals().total_passengers_boarded.current), pax_boarded_total = pax_boarded_1 + pax_boarded_2 + pax_boarded_3 + pax_boarded_4, call_centre__year_1__channel_shift = passengersBoardedData.direct_dist_costs_per_pb.call_centre.channel.channel_shift_over_5_yrs / 5, call_centre__year_1__perc_pax_boarded = call_centre__year_1__channel_shift + passengersBoardedData.direct_dist_costs_per_pb.call_centre.channel.current_channel_mix, call_centre__year_2__channel_shift = passengersBoardedData.direct_dist_costs_per_pb.call_centre.channel.channel_shift_over_5_yrs / 5, call_centre__year_2__perc_pax_boarded = call_centre__year_2__channel_shift + passengersBoardedData.direct_dist_costs_per_pb.call_centre.channel.current_channel_mix, call_centre__year_3__channel_shift = passengersBoardedData.direct_dist_costs_per_pb.call_centre.channel.channel_shift_over_5_yrs / 5, call_centre__year_3__perc_pax_boarded = call_centre__year_3__channel_shift + passengersBoardedData.direct_dist_costs_per_pb.call_centre.channel.current_channel_mix, call_centre__year_4__channel_shift = passengersBoardedData.direct_dist_costs_per_pb.call_centre.channel.channel_shift_over_5_yrs / 5, call_centre__year_4__perc_pax_boarded = call_centre__year_4__channel_shift + passengersBoardedData.direct_dist_costs_per_pb.call_centre.channel.current_channel_mix, call_centre__year_5__channel_shift = passengersBoardedData.direct_dist_costs_per_pb.call_centre.channel.channel_shift_over_5_yrs / 5, call_centre__year_5__perc_pax_boarded = call_centre__year_5__channel_shift + passengersBoardedData.direct_dist_costs_per_pb.call_centre.channel.current_channel_mix, ecommerce__year_1__channel_shift = passengersBoardedData.direct_dist_costs_per_pb.ecommerce.channel.channel_shift_over_5_yrs / 5, ecommerce__year_1__perc_pax_boarded = ecommerce__year_1__channel_shift + passengersBoardedData.direct_dist_costs_per_pb.ecommerce.channel.current_channel_mix, ecommerce__year_2__channel_shift = passengersBoardedData.direct_dist_costs_per_pb.ecommerce.channel.channel_shift_over_5_yrs / 5, ecommerce__year_2__perc_pax_boarded = ecommerce__year_2__channel_shift + ecommerce__year_1__perc_pax_boarded, ecommerce__year_3__channel_shift = passengersBoardedData.direct_dist_costs_per_pb.ecommerce.channel.channel_shift_over_5_yrs / 5, ecommerce__year_3__perc_pax_boarded = ecommerce__year_3__channel_shift + ecommerce__year_2__perc_pax_boarded, ecommerce__year_4__channel_shift = passengersBoardedData.direct_dist_costs_per_pb.ecommerce.channel.channel_shift_over_5_yrs / 5, ecommerce__year_4__perc_pax_boarded = ecommerce__year_4__channel_shift + ecommerce__year_3__perc_pax_boarded, ecommerce__year_5__channel_shift = passengersBoardedData.direct_dist_costs_per_pb.ecommerce.channel.channel_shift_over_5_yrs / 5, ecommerce__year_5__perc_pax_boarded = ecommerce__year_5__channel_shift + ecommerce__year_4__perc_pax_boarded, a2a__year_1__channel_shift = passengersBoardedData.direct_dist_costs_per_pb.travel_agent.channel.channel_shift_over_5_yrs / 5, a2a__year_1__perc_pax_boarded = a2a__year_1__channel_shift + passengersBoardedData.direct_dist_costs_per_pb.travel_agent.channel.current_channel_mix, a2a__year_2__channel_shift = passengersBoardedData.direct_dist_costs_per_pb.travel_agent.channel.channel_shift_over_5_yrs / 5, a2a__year_2__perc_pax_boarded = a2a__year_2__channel_shift + a2a__year_1__perc_pax_boarded, a2a__year_3__channel_shift = passengersBoardedData.direct_dist_costs_per_pb.travel_agent.channel.channel_shift_over_5_yrs / 5, a2a__year_3__perc_pax_boarded = a2a__year_3__channel_shift + a2a__year_2__perc_pax_boarded, a2a__year_4__channel_shift = passengersBoardedData.direct_dist_costs_per_pb.travel_agent.channel.channel_shift_over_5_yrs / 5, a2a__year_4__perc_pax_boarded = a2a__year_4__channel_shift + a2a__year_3__perc_pax_boarded, a2a__year_5__channel_shift = passengersBoardedData.direct_dist_costs_per_pb.travel_agent.channel.channel_shift_over_5_yrs / 5, a2a__year_5__perc_pax_boarded = a2a__year_5__channel_shift + a2a__year_4__perc_pax_boarded, mobile__year_1__channel_shift = passengersBoardedData.direct_dist_costs_per_pb.mobile.channel.channel_shift_over_5_yrs / 5, mobile__year_1__perc_pax_boarded = mobile__year_1__channel_shift + passengersBoardedData.direct_dist_costs_per_pb.mobile.channel.current_channel_mix, mobile__year_2__channel_shift = passengersBoardedData.direct_dist_costs_per_pb.mobile.channel.channel_shift_over_5_yrs / 5, mobile__year_2__perc_pax_boarded = mobile__year_2__channel_shift + mobile__year_1__perc_pax_boarded, mobile__year_3__channel_shift = passengersBoardedData.direct_dist_costs_per_pb.mobile.channel.channel_shift_over_5_yrs / 5, mobile__year_3__perc_pax_boarded = mobile__year_3__channel_shift + mobile__year_2__perc_pax_boarded, mobile__year_4__channel_shift = passengersBoardedData.direct_dist_costs_per_pb.mobile.channel.channel_shift_over_5_yrs / 5, mobile__year_4__perc_pax_boarded = mobile__year_4__channel_shift + mobile__year_3__perc_pax_boarded, mobile__year_5__channel_shift = passengersBoardedData.direct_dist_costs_per_pb.mobile.channel.channel_shift_over_5_yrs / 5, mobile__year_5__perc_pax_boarded = mobile__year_5__channel_shift + mobile__year_4__perc_pax_boarded;
            return {
                perc_pax_boarded: passengersBoardedData.direct_dist_costs_per_pb.current_channel_mix_total,
                pax_boarded: pax_boarded_total,
                call_centre: {
                    cost_per_pb: {
                        current_provider: passengersBoardedData.direct_dist_costs_per_pb.call_centre.cost_per_pb.current_provider.toFixed(2),
                        sita: passengersBoardedData.direct_dist_costs_per_pb.call_centre.cost_per_pb.sita.toFixed(2)
                    },
                    current: {
                        perc_pax_boarded: passengersBoardedData.direct_dist_costs_per_pb.call_centre.channel.current_channel_mix,
                        pax_boarded: pax_boarded_1
                    },
                    year_1: {
                        channel_shift: call_centre__year_1__channel_shift,
                        perc_pax_boarded: call_centre__year_1__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_1 * (passengersBoardedData.direct_dist_costs_per_pb.call_centre.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_1 * (call_centre__year_1__perc_pax_boarded / 100)
                        }
                    },
                    year_2: {
                        channel_shift: call_centre__year_2__channel_shift,
                        perc_pax_boarded: call_centre__year_2__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_2 * (passengersBoardedData.direct_dist_costs_per_pb.call_centre.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_2 * (call_centre__year_2__perc_pax_boarded / 100)
                        }
                    },
                    year_3: {
                        channel_shift: call_centre__year_3__channel_shift,
                        perc_pax_boarded: call_centre__year_3__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_3 * (passengersBoardedData.direct_dist_costs_per_pb.call_centre.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_3 * (call_centre__year_3__perc_pax_boarded / 100)
                        }
                    },
                    year_4: {
                        channel_shift: call_centre__year_4__channel_shift,
                        perc_pax_boarded: call_centre__year_4__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_4 * (passengersBoardedData.direct_dist_costs_per_pb.call_centre.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_4 * (call_centre__year_4__perc_pax_boarded / 100)
                        }
                    },
                    year_5: {
                        channel_shift: call_centre__year_5__channel_shift,
                        perc_pax_boarded: call_centre__year_5__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_5 * (passengersBoardedData.direct_dist_costs_per_pb.call_centre.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_5 * (call_centre__year_5__perc_pax_boarded / 100)
                        }
                    }
                },
                ecommerce: {
                    cost_per_pb: {
                        current_provider: passengersBoardedData.direct_dist_costs_per_pb.ecommerce.cost_per_pb.current_provider,
                        sita: passengersBoardedData.direct_dist_costs_per_pb.ecommerce.cost_per_pb.sita
                    },
                    current: {
                        perc_pax_boarded: passengersBoardedData.direct_dist_costs_per_pb.ecommerce.channel.current_channel_mix,
                        pax_boarded: pax_boarded_2
                    },
                    year_1: {
                        channel_shift: ecommerce__year_1__channel_shift,
                        perc_pax_boarded: ecommerce__year_1__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_1 * (passengersBoardedData.direct_dist_costs_per_pb.ecommerce.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_1 * (ecommerce__year_1__perc_pax_boarded / 100)
                        }
                    },
                    year_2: {
                        channel_shift: ecommerce__year_2__channel_shift,
                        perc_pax_boarded: ecommerce__year_2__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_2 * (passengersBoardedData.direct_dist_costs_per_pb.ecommerce.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_2 * (ecommerce__year_2__perc_pax_boarded / 100)
                        }
                    },
                    year_3: {
                        channel_shift: ecommerce__year_3__channel_shift,
                        perc_pax_boarded: ecommerce__year_3__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_3 * (passengersBoardedData.direct_dist_costs_per_pb.ecommerce.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_3 * (ecommerce__year_3__perc_pax_boarded / 100)
                        }
                    },
                    year_4: {
                        channel_shift: ecommerce__year_4__channel_shift,
                        perc_pax_boarded: ecommerce__year_4__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_4 * (passengersBoardedData.direct_dist_costs_per_pb.ecommerce.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_4 * (ecommerce__year_4__perc_pax_boarded / 100)
                        }
                    },
                    year_5: {
                        channel_shift: ecommerce__year_5__channel_shift,
                        perc_pax_boarded: ecommerce__year_5__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_5 * (passengersBoardedData.direct_dist_costs_per_pb.ecommerce.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_5 * (ecommerce__year_5__perc_pax_boarded / 100)
                        }
                    }
                },
                a2a: {
                    cost_per_pb: {
                        current_provider: passengersBoardedData.direct_dist_costs_per_pb.travel_agent.cost_per_pb.current_provider,
                        sita: passengersBoardedData.direct_dist_costs_per_pb.travel_agent.cost_per_pb.sita
                    },
                    current: {
                        perc_pax_boarded: passengersBoardedData.direct_dist_costs_per_pb.travel_agent.channel.current_channel_mix,
                        pax_boarded: pax_boarded_3
                    },
                    year_1: {
                        channel_shift: a2a__year_1__channel_shift,
                        perc_pax_boarded: a2a__year_1__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_1 * (passengersBoardedData.direct_dist_costs_per_pb.travel_agent.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_1 * (a2a__year_1__perc_pax_boarded / 100)
                        }
                    },
                    year_2: {
                        channel_shift: a2a__year_2__channel_shift,
                        perc_pax_boarded: a2a__year_2__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_2 * (passengersBoardedData.direct_dist_costs_per_pb.travel_agent.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_2 * (a2a__year_2__perc_pax_boarded / 100)
                        }
                    },
                    year_3: {
                        channel_shift: a2a__year_3__channel_shift,
                        perc_pax_boarded: a2a__year_3__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_3 * (passengersBoardedData.direct_dist_costs_per_pb.travel_agent.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_3 * (a2a__year_3__perc_pax_boarded / 100)
                        }
                    },
                    year_4: {
                        channel_shift: a2a__year_4__channel_shift,
                        perc_pax_boarded: a2a__year_4__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_4 * (passengersBoardedData.direct_dist_costs_per_pb.travel_agent.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_4 * (a2a__year_4__perc_pax_boarded / 100)
                        }
                    },
                    year_5: {
                        channel_shift: a2a__year_5__channel_shift,
                        perc_pax_boarded: a2a__year_5__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_5 * (passengersBoardedData.direct_dist_costs_per_pb.travel_agent.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_5 * (a2a__year_5__perc_pax_boarded / 100)
                        }
                    }
                },
                mobile: {
                    cost_per_pb: {
                        current_provider: passengersBoardedData.direct_dist_costs_per_pb.mobile.cost_per_pb.current_provider,
                        sita: passengersBoardedData.direct_dist_costs_per_pb.mobile.cost_per_pb.sita
                    },
                    current: {
                        perc_pax_boarded: passengersBoardedData.direct_dist_costs_per_pb.mobile.channel.current_channel_mix,
                        pax_boarded: pax_boarded_4
                    },
                    year_1: {
                        channel_shift: mobile__year_1__channel_shift,
                        perc_pax_boarded: mobile__year_1__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_1 * (passengersBoardedData.direct_dist_costs_per_pb.mobile.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_1 * (mobile__year_1__perc_pax_boarded / 100)
                        }
                    },
                    year_2: {
                        channel_shift: mobile__year_2__channel_shift,
                        perc_pax_boarded: mobile__year_2__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_2 * (passengersBoardedData.direct_dist_costs_per_pb.mobile.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_2 * (mobile__year_2__perc_pax_boarded / 100)
                        }
                    },
                    year_3: {
                        channel_shift: mobile__year_3__channel_shift,
                        perc_pax_boarded: mobile__year_3__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_3 * (passengersBoardedData.direct_dist_costs_per_pb.mobile.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_3 * (mobile__year_3__perc_pax_boarded / 100)
                        }
                    },
                    year_4: {
                        channel_shift: mobile__year_4__channel_shift,
                        perc_pax_boarded: mobile__year_4__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_4 * (passengersBoardedData.direct_dist_costs_per_pb.mobile.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_4 * (mobile__year_4__perc_pax_boarded / 100)
                        }
                    },
                    year_5: {
                        channel_shift: mobile__year_5__channel_shift,
                        perc_pax_boarded: mobile__year_5__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_5 * (passengersBoardedData.direct_dist_costs_per_pb.mobile.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_5 * (mobile__year_5__perc_pax_boarded / 100)
                        }
                    }
                }
            };
        },
        indirect: function() {
            var pax_boarded_1 = Math.round(passengersBoardedData.indirect_dist_costs_per_pb.amadeus.channel.current_channel_mix / 100 * this.totals().total_passengers_boarded.current), pax_boarded_2 = Math.round(passengersBoardedData.indirect_dist_costs_per_pb.sabre.channel.current_channel_mix / 100 * this.totals().total_passengers_boarded.current), pax_boarded_3 = Math.round(passengersBoardedData.indirect_dist_costs_per_pb.galileo.channel.current_channel_mix / 100 * this.totals().total_passengers_boarded.current), pax_boarded_4 = Math.round(passengersBoardedData.indirect_dist_costs_per_pb.abacus.channel.current_channel_mix / 100 * this.totals().total_passengers_boarded.current), pax_boarded_total = pax_boarded_1 + pax_boarded_2 + pax_boarded_3 + pax_boarded_4, gds_amadeus__year_1__channel_shift = passengersBoardedData.indirect_dist_costs_per_pb.amadeus.channel.channel_shift_over_5_yrs / 5, gds_amadeus__year_1__perc_pax_boarded = gds_amadeus__year_1__channel_shift + passengersBoardedData.indirect_dist_costs_per_pb.amadeus.channel.current_channel_mix, gds_amadeus__year_2__channel_shift = passengersBoardedData.indirect_dist_costs_per_pb.amadeus.channel.channel_shift_over_5_yrs / 5, gds_amadeus__year_2__perc_pax_boarded = gds_amadeus__year_2__channel_shift + gds_amadeus__year_1__perc_pax_boarded, gds_amadeus__year_3__channel_shift = passengersBoardedData.indirect_dist_costs_per_pb.amadeus.channel.channel_shift_over_5_yrs / 5, gds_amadeus__year_3__perc_pax_boarded = gds_amadeus__year_3__channel_shift + gds_amadeus__year_2__perc_pax_boarded, gds_amadeus__year_4__channel_shift = passengersBoardedData.indirect_dist_costs_per_pb.amadeus.channel.channel_shift_over_5_yrs / 5, gds_amadeus__year_4__perc_pax_boarded = gds_amadeus__year_4__channel_shift + gds_amadeus__year_3__perc_pax_boarded, gds_amadeus__year_5__channel_shift = passengersBoardedData.indirect_dist_costs_per_pb.amadeus.channel.channel_shift_over_5_yrs / 5, gds_amadeus__year_5__perc_pax_boarded = gds_amadeus__year_5__channel_shift + gds_amadeus__year_4__perc_pax_boarded, gds_sabre__year_1__channel_shift = passengersBoardedData.indirect_dist_costs_per_pb.sabre.channel.channel_shift_over_5_yrs / 5, gds_sabre__year_1__perc_pax_boarded = gds_sabre__year_1__channel_shift + passengersBoardedData.indirect_dist_costs_per_pb.sabre.channel.current_channel_mix, gds_sabre__year_2__channel_shift = passengersBoardedData.indirect_dist_costs_per_pb.sabre.channel.channel_shift_over_5_yrs / 5, gds_sabre__year_2__perc_pax_boarded = gds_sabre__year_2__channel_shift + gds_sabre__year_1__perc_pax_boarded, gds_sabre__year_3__channel_shift = passengersBoardedData.indirect_dist_costs_per_pb.sabre.channel.channel_shift_over_5_yrs / 5, gds_sabre__year_3__perc_pax_boarded = gds_sabre__year_3__channel_shift + gds_sabre__year_2__perc_pax_boarded, gds_sabre__year_4__channel_shift = passengersBoardedData.indirect_dist_costs_per_pb.sabre.channel.channel_shift_over_5_yrs / 5, gds_sabre__year_4__perc_pax_boarded = gds_sabre__year_4__channel_shift + gds_sabre__year_3__perc_pax_boarded, gds_sabre__year_5__channel_shift = passengersBoardedData.indirect_dist_costs_per_pb.sabre.channel.channel_shift_over_5_yrs / 5, gds_sabre__year_5__perc_pax_boarded = gds_sabre__year_5__channel_shift + gds_sabre__year_4__perc_pax_boarded, gds_galileo__year_1__channel_shift = passengersBoardedData.indirect_dist_costs_per_pb.galileo.channel.channel_shift_over_5_yrs / 5, gds_galileo__year_1__perc_pax_boarded = gds_galileo__year_1__channel_shift + passengersBoardedData.indirect_dist_costs_per_pb.galileo.channel.current_channel_mix, gds_galileo__year_2__channel_shift = passengersBoardedData.indirect_dist_costs_per_pb.galileo.channel.channel_shift_over_5_yrs / 5, gds_galileo__year_2__perc_pax_boarded = gds_galileo__year_2__channel_shift + gds_galileo__year_1__perc_pax_boarded, gds_galileo__year_3__channel_shift = passengersBoardedData.indirect_dist_costs_per_pb.galileo.channel.channel_shift_over_5_yrs / 5, gds_galileo__year_3__perc_pax_boarded = gds_galileo__year_3__channel_shift + gds_galileo__year_2__perc_pax_boarded, gds_galileo__year_4__channel_shift = passengersBoardedData.indirect_dist_costs_per_pb.galileo.channel.channel_shift_over_5_yrs / 5, gds_galileo__year_4__perc_pax_boarded = gds_galileo__year_4__channel_shift + gds_galileo__year_3__perc_pax_boarded, gds_galileo__year_5__channel_shift = passengersBoardedData.indirect_dist_costs_per_pb.galileo.channel.channel_shift_over_5_yrs / 5, gds_galileo__year_5__perc_pax_boarded = gds_galileo__year_5__channel_shift + gds_galileo__year_4__perc_pax_boarded, gds_abacus__year_1__channel_shift = passengersBoardedData.indirect_dist_costs_per_pb.abacus.channel.channel_shift_over_5_yrs / 5, gds_abacus__year_1__perc_pax_boarded = gds_abacus__year_1__channel_shift + passengersBoardedData.indirect_dist_costs_per_pb.abacus.channel.current_channel_mix, gds_abacus__year_2__channel_shift = passengersBoardedData.indirect_dist_costs_per_pb.abacus.channel.channel_shift_over_5_yrs / 5, gds_abacus__year_2__perc_pax_boarded = gds_abacus__year_2__channel_shift + gds_abacus__year_1__perc_pax_boarded, gds_abacus__year_3__channel_shift = passengersBoardedData.indirect_dist_costs_per_pb.abacus.channel.channel_shift_over_5_yrs / 5, gds_abacus__year_3__perc_pax_boarded = gds_abacus__year_3__channel_shift + gds_abacus__year_2__perc_pax_boarded, gds_abacus__year_4__channel_shift = passengersBoardedData.indirect_dist_costs_per_pb.abacus.channel.channel_shift_over_5_yrs / 5, gds_abacus__year_4__perc_pax_boarded = gds_abacus__year_4__channel_shift + gds_abacus__year_3__perc_pax_boarded, gds_abacus__year_5__channel_shift = passengersBoardedData.indirect_dist_costs_per_pb.abacus.channel.channel_shift_over_5_yrs / 5, gds_abacus__year_5__perc_pax_boarded = gds_abacus__year_5__channel_shift + gds_abacus__year_4__perc_pax_boarded;
            return {
                perc_pax_boarded: passengersBoardedData.indirect_dist_costs_per_pb.current_channel_mix_total,
                pax_boarded: pax_boarded_total,
                amadeus: {
                    cost_per_pb: {
                        current_provider: passengersBoardedData.indirect_dist_costs_per_pb.amadeus.cost_per_pb.current_provider,
                        sita: passengersBoardedData.indirect_dist_costs_per_pb.amadeus.cost_per_pb.sita
                    },
                    current: {
                        pax_boarded: pax_boarded_1,
                        perc_pax_boarded: passengersBoardedData.indirect_dist_costs_per_pb.amadeus.channel.current_channel_mix
                    },
                    year_1: {
                        channel_shift: gds_amadeus__year_1__channel_shift,
                        perc_pax_boarded: gds_amadeus__year_1__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_1 * (passengersBoardedData.indirect_dist_costs_per_pb.amadeus.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_1 * (gds_amadeus__year_1__perc_pax_boarded / 100)
                        }
                    },
                    year_2: {
                        channel_shift: gds_amadeus__year_2__channel_shift,
                        perc_pax_boarded: gds_amadeus__year_2__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_2 * (passengersBoardedData.indirect_dist_costs_per_pb.amadeus.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_2 * (gds_amadeus__year_2__perc_pax_boarded / 100)
                        }
                    },
                    year_3: {
                        channel_shift: gds_amadeus__year_3__channel_shift,
                        perc_pax_boarded: gds_amadeus__year_3__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_3 * (passengersBoardedData.indirect_dist_costs_per_pb.amadeus.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_3 * (gds_amadeus__year_3__perc_pax_boarded / 100)
                        }
                    },
                    year_4: {
                        channel_shift: gds_amadeus__year_4__channel_shift,
                        perc_pax_boarded: gds_amadeus__year_4__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_4 * (passengersBoardedData.indirect_dist_costs_per_pb.amadeus.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_4 * (gds_amadeus__year_4__perc_pax_boarded / 100)
                        }
                    },
                    year_5: {
                        channel_shift: gds_amadeus__year_5__channel_shift,
                        perc_pax_boarded: gds_amadeus__year_5__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_5 * (passengersBoardedData.indirect_dist_costs_per_pb.amadeus.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_5 * (gds_amadeus__year_5__perc_pax_boarded / 100)
                        }
                    }
                },
                sabre: {
                    cost_per_pb: {
                        current_provider: passengersBoardedData.indirect_dist_costs_per_pb.sabre.cost_per_pb.current_provider,
                        sita: passengersBoardedData.indirect_dist_costs_per_pb.sabre.cost_per_pb.sita
                    },
                    current: {
                        pax_boarded: pax_boarded_2,
                        perc_pax_boarded: passengersBoardedData.indirect_dist_costs_per_pb.sabre.channel.current_channel_mix
                    },
                    year_1: {
                        channel_shift: gds_sabre__year_1__channel_shift,
                        perc_pax_boarded: gds_sabre__year_1__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_1 * (passengersBoardedData.indirect_dist_costs_per_pb.sabre.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_1 * (gds_sabre__year_1__perc_pax_boarded / 100)
                        }
                    },
                    year_2: {
                        channel_shift: gds_sabre__year_2__channel_shift,
                        perc_pax_boarded: gds_sabre__year_2__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_2 * (passengersBoardedData.indirect_dist_costs_per_pb.sabre.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_2 * (gds_sabre__year_2__perc_pax_boarded / 100)
                        }
                    },
                    year_3: {
                        channel_shift: gds_sabre__year_3__channel_shift,
                        perc_pax_boarded: gds_sabre__year_3__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_3 * (passengersBoardedData.indirect_dist_costs_per_pb.sabre.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_3 * (gds_sabre__year_3__perc_pax_boarded / 100)
                        }
                    },
                    year_4: {
                        channel_shift: gds_sabre__year_4__channel_shift,
                        perc_pax_boarded: gds_sabre__year_4__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_4 * (passengersBoardedData.indirect_dist_costs_per_pb.sabre.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_4 * (gds_sabre__year_4__perc_pax_boarded / 100)
                        }
                    },
                    year_5: {
                        channel_shift: gds_sabre__year_5__channel_shift,
                        perc_pax_boarded: gds_sabre__year_5__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_5 * (passengersBoardedData.indirect_dist_costs_per_pb.sabre.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_5 * (gds_sabre__year_5__perc_pax_boarded / 100)
                        }
                    }
                },
                galileo: {
                    cost_per_pb: {
                        current_provider: passengersBoardedData.indirect_dist_costs_per_pb.galileo.cost_per_pb.current_provider,
                        sita: passengersBoardedData.indirect_dist_costs_per_pb.galileo.cost_per_pb.sita
                    },
                    current: {
                        pax_boarded: pax_boarded_3,
                        perc_pax_boarded: passengersBoardedData.indirect_dist_costs_per_pb.galileo.channel.current_channel_mix
                    },
                    year_1: {
                        channel_shift: gds_galileo__year_1__channel_shift,
                        perc_pax_boarded: gds_galileo__year_1__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_1 * (passengersBoardedData.indirect_dist_costs_per_pb.galileo.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_1 * (gds_galileo__year_1__perc_pax_boarded / 100)
                        }
                    },
                    year_2: {
                        channel_shift: gds_galileo__year_2__channel_shift,
                        perc_pax_boarded: gds_galileo__year_2__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_2 * (passengersBoardedData.indirect_dist_costs_per_pb.galileo.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_2 * (gds_galileo__year_2__perc_pax_boarded / 100)
                        }
                    },
                    year_3: {
                        channel_shift: gds_galileo__year_3__channel_shift,
                        perc_pax_boarded: gds_galileo__year_3__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_3 * (passengersBoardedData.indirect_dist_costs_per_pb.galileo.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_3 * (gds_galileo__year_3__perc_pax_boarded / 100)
                        }
                    },
                    year_4: {
                        channel_shift: gds_galileo__year_4__channel_shift,
                        perc_pax_boarded: gds_galileo__year_4__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_4 * (passengersBoardedData.indirect_dist_costs_per_pb.galileo.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_4 * (gds_galileo__year_4__perc_pax_boarded / 100)
                        }
                    },
                    year_5: {
                        channel_shift: gds_galileo__year_5__channel_shift,
                        perc_pax_boarded: gds_galileo__year_5__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_5 * (passengersBoardedData.indirect_dist_costs_per_pb.galileo.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_5 * (gds_galileo__year_5__perc_pax_boarded / 100)
                        }
                    }
                },
                abacus: {
                    cost_per_pb: {
                        current_provider: passengersBoardedData.indirect_dist_costs_per_pb.abacus.cost_per_pb.current_provider,
                        sita: passengersBoardedData.indirect_dist_costs_per_pb.abacus.cost_per_pb.sita
                    },
                    current: {
                        pax_boarded: pax_boarded_4,
                        perc_pax_boarded: passengersBoardedData.indirect_dist_costs_per_pb.abacus.channel.current_channel_mix
                    },
                    year_1: {
                        channel_shift: gds_abacus__year_1__channel_shift,
                        perc_pax_boarded: gds_abacus__year_1__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_1 * (passengersBoardedData.indirect_dist_costs_per_pb.abacus.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_1 * (gds_abacus__year_1__perc_pax_boarded / 100)
                        }
                    },
                    year_2: {
                        channel_shift: gds_abacus__year_2__channel_shift,
                        perc_pax_boarded: gds_abacus__year_2__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_2 * (passengersBoardedData.indirect_dist_costs_per_pb.abacus.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_2 * (gds_abacus__year_2__perc_pax_boarded / 100)
                        }
                    },
                    year_3: {
                        channel_shift: gds_abacus__year_3__channel_shift,
                        perc_pax_boarded: gds_abacus__year_3__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_3 * (passengersBoardedData.indirect_dist_costs_per_pb.abacus.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_3 * (gds_abacus__year_3__perc_pax_boarded / 100)
                        }
                    },
                    year_4: {
                        channel_shift: gds_abacus__year_4__channel_shift,
                        perc_pax_boarded: gds_abacus__year_4__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_4 * (passengersBoardedData.indirect_dist_costs_per_pb.abacus.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_4 * (gds_abacus__year_4__perc_pax_boarded / 100)
                        }
                    },
                    year_5: {
                        channel_shift: gds_abacus__year_5__channel_shift,
                        perc_pax_boarded: gds_abacus__year_5__perc_pax_boarded,
                        pax_boarded: {
                            current: this.totals().total_passengers_boarded.year_5 * (passengersBoardedData.indirect_dist_costs_per_pb.abacus.channel.current_channel_mix / 100),
                            sita: this.totals().total_passengers_boarded.year_5 * (gds_abacus__year_5__perc_pax_boarded / 100)
                        }
                    }
                }
            };
        },
        costs: function() {
            var cost_per_pb__current__direct__call_centre = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.current_provider + passengersBoardedData.direct_dist_costs_per_pb.call_centre.cost_per_pb.current_provider, cost_per_pb__current__direct__ecommerce = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.current_provider + passengersBoardedData.direct_dist_costs_per_pb.ecommerce.cost_per_pb.current_provider, cost_per_pb__current__direct__a2a = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.current_provider + passengersBoardedData.direct_dist_costs_per_pb.travel_agent.cost_per_pb.current_provider, cost_per_pb__current__direct__mobile = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.current_provider + passengersBoardedData.direct_dist_costs_per_pb.mobile.cost_per_pb.current_provider, cost_per_pb__current__direct__other_1 = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.current_provider, cost_per_pb__current__direct__other_2 = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.current_provider, cost_per_pb__current__indirect__amadeus = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.current_provider + passengersBoardedData.indirect_dist_costs_per_pb.amadeus.cost_per_pb.current_provider, cost_per_pb__current__indirect__sabre = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.current_provider + passengersBoardedData.indirect_dist_costs_per_pb.sabre.cost_per_pb.current_provider, cost_per_pb__current__indirect__galileo = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.current_provider + passengersBoardedData.indirect_dist_costs_per_pb.galileo.cost_per_pb.current_provider, cost_per_pb__current__indirect__abacus = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.current_provider + passengersBoardedData.indirect_dist_costs_per_pb.abacus.cost_per_pb.current_provider, cost_per_pb__current__indirect__other_1 = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.current_provider, cost_per_pb__current__indirect__other_2 = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.current_provider, cost_per_pb__sita__direct__call_centre = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.sita + passengersBoardedData.direct_dist_costs_per_pb.call_centre.cost_per_pb.sita, cost_per_pb__sita__direct__ecommerce = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.sita + passengersBoardedData.direct_dist_costs_per_pb.ecommerce.cost_per_pb.sita, cost_per_pb__sita__direct__a2a = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.sita + passengersBoardedData.direct_dist_costs_per_pb.travel_agent.cost_per_pb.sita, cost_per_pb__sita__direct__mobile = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.sita + passengersBoardedData.direct_dist_costs_per_pb.mobile.cost_per_pb.sita, cost_per_pb__sita__direct__other_1 = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.sita, cost_per_pb__sita__direct__other_2 = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.sita, cost_per_pb__sita__indirect__amadeus = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.sita + passengersBoardedData.indirect_dist_costs_per_pb.amadeus.cost_per_pb.sita, cost_per_pb__sita__indirect__sabre = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.sita + passengersBoardedData.indirect_dist_costs_per_pb.sabre.cost_per_pb.sita, cost_per_pb__sita__indirect__galileo = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.sita + passengersBoardedData.indirect_dist_costs_per_pb.galileo.cost_per_pb.sita, cost_per_pb__sita__indirect__abacus = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.sita + passengersBoardedData.indirect_dist_costs_per_pb.abacus.cost_per_pb.sita, cost_per_pb__sita__indirect__other_1 = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.sita, cost_per_pb__sita__indirect__other_2 = passengersBoardedData.core_passenger_services_cost_per_pb.cost_per_pb.sita, current__current__direct__call_centre = cost_per_pb__current__direct__call_centre * this.direct().call_centre.current.pax_boarded, current__current__direct__ecommerce = cost_per_pb__current__direct__ecommerce * this.direct().ecommerce.current.pax_boarded, current__current__direct__a2a = cost_per_pb__current__direct__a2a * this.direct().a2a.current.pax_boarded, current__current__direct__mobile = cost_per_pb__current__direct__mobile * this.direct().mobile.current.pax_boarded, current__current__direct__other_1 = 0 * cost_per_pb__current__direct__other_1, current__current__direct__other_2 = 0 * cost_per_pb__current__direct__other_2, current__current__direct__total = current__current__direct__call_centre + current__current__direct__ecommerce + current__current__direct__a2a + current__current__direct__mobile + current__current__direct__other_1 + current__current__direct__other_2, current__current__indirect__amadeus = cost_per_pb__current__indirect__amadeus * this.indirect().amadeus.current.pax_boarded, current__current__indirect__sabre = cost_per_pb__current__indirect__sabre * this.indirect().sabre.current.pax_boarded, current__current__indirect__galileo = cost_per_pb__current__indirect__galileo * this.indirect().galileo.current.pax_boarded, current__current__indirect__abacus = cost_per_pb__current__indirect__abacus * this.indirect().abacus.current.pax_boarded, current__current__indirect__other_1 = 0 * cost_per_pb__current__indirect__other_1, current__current__indirect__other_2 = 0 * cost_per_pb__current__indirect__other_2, current__current__indirect__total = current__current__indirect__amadeus + current__current__indirect__sabre + current__current__indirect__galileo + current__current__indirect__abacus + current__current__indirect__other_1 + current__current__indirect__other_2, current__sita__direct__call_centre = cost_per_pb__sita__direct__call_centre * this.direct().call_centre.current.pax_boarded, current__sita__direct__ecommerce = cost_per_pb__sita__direct__ecommerce * this.direct().ecommerce.current.pax_boarded, current__sita__direct__a2a = cost_per_pb__sita__direct__a2a * this.direct().a2a.current.pax_boarded, current__sita__direct__mobile = cost_per_pb__sita__direct__mobile * this.direct().mobile.current.pax_boarded, current__sita__direct__other_1 = 0 * cost_per_pb__sita__direct__other_1, current__sita__direct__other_2 = 0 * cost_per_pb__sita__direct__other_2, current__sita__direct__total = current__sita__direct__call_centre + current__sita__direct__ecommerce + current__sita__direct__a2a + current__sita__direct__mobile + current__sita__direct__other_1 + current__sita__direct__other_2, current__sita__indirect__amadeus = cost_per_pb__sita__indirect__amadeus * this.indirect().amadeus.current.pax_boarded, current__sita__indirect__sabre = cost_per_pb__sita__indirect__sabre * this.indirect().sabre.current.pax_boarded, current__sita__indirect__galileo = cost_per_pb__sita__indirect__galileo * this.indirect().galileo.current.pax_boarded, current__sita__indirect__abacus = cost_per_pb__sita__indirect__abacus * this.indirect().abacus.current.pax_boarded, current__sita__indirect__other_1 = 0 * cost_per_pb__sita__indirect__other_1, current__sita__indirect__other_2 = 0 * cost_per_pb__sita__indirect__other_2, current__sita__indirect__total = current__sita__indirect__amadeus + current__sita__indirect__sabre + current__sita__indirect__galileo + current__sita__indirect__abacus + current__sita__indirect__other_1 + current__sita__indirect__other_2, current__current__total = current__current__direct__total + current__current__indirect__total, current__sita__total = current__sita__direct__total + current__sita__indirect__total, current__supplier_does_not_shift__difference = current__current__total - current__sita__total, year_1__current__direct__call_centre = cost_per_pb__current__direct__call_centre * this.direct().call_centre.year_1.pax_boarded.current, year_1__current__direct__ecommerce = cost_per_pb__current__direct__ecommerce * this.direct().ecommerce.year_1.pax_boarded.current, year_1__current__direct__a2a = cost_per_pb__current__direct__a2a * this.direct().a2a.year_1.pax_boarded.current, year_1__current__direct__mobile = cost_per_pb__current__direct__mobile * this.direct().mobile.year_1.pax_boarded.current, year_1__current__direct__other_1 = 0 * cost_per_pb__current__direct__other_1, year_1__current__direct__other_2 = 0 * cost_per_pb__current__direct__other_2, year_1__current__direct__total = year_1__current__direct__call_centre + year_1__current__direct__ecommerce + year_1__current__direct__a2a + year_1__current__direct__mobile + year_1__current__direct__other_1 + year_1__current__direct__other_2, year_1__current__indirect__amadeus = cost_per_pb__current__indirect__amadeus * this.indirect().amadeus.year_1.pax_boarded.current, year_1__current__indirect__sabre = cost_per_pb__current__indirect__sabre * this.indirect().sabre.year_1.pax_boarded.current, year_1__current__indirect__galileo = cost_per_pb__current__indirect__galileo * this.indirect().galileo.year_1.pax_boarded.current, year_1__current__indirect__abacus = cost_per_pb__current__indirect__abacus * this.indirect().abacus.year_1.pax_boarded.current, year_1__current__indirect__other_1 = 0 * cost_per_pb__current__indirect__other_1, year_1__current__indirect__other_2 = 0 * cost_per_pb__current__indirect__other_2, year_1__current__indirect__total = year_1__current__indirect__amadeus + year_1__current__indirect__sabre + year_1__current__indirect__galileo + year_1__current__indirect__abacus + year_1__current__indirect__other_1 + year_1__current__indirect__other_2, year_1__current__totals = year_1__current__direct__total + year_1__current__indirect__total, year_1__current_with_channel_shift__direct__call_centre = cost_per_pb__current__direct__call_centre * this.direct().call_centre.year_1.pax_boarded.sita, year_1__current_with_channel_shift__direct__ecommerce = cost_per_pb__current__direct__ecommerce * this.direct().ecommerce.year_1.pax_boarded.sita, year_1__current_with_channel_shift__direct__a2a = cost_per_pb__current__direct__a2a * this.direct().a2a.year_1.pax_boarded.sita, year_1__current_with_channel_shift__direct__mobile = cost_per_pb__current__direct__mobile * this.direct().mobile.year_1.pax_boarded.sita, year_1__current_with_channel_shift__direct__other_1 = 0 * cost_per_pb__current__direct__other_1, year_1__current_with_channel_shift__direct__other_2 = 0 * cost_per_pb__current__direct__other_2, year_1__current_with_channel_shift__direct__total = year_1__current_with_channel_shift__direct__call_centre + year_1__current_with_channel_shift__direct__ecommerce + year_1__current_with_channel_shift__direct__a2a + year_1__current_with_channel_shift__direct__mobile + year_1__current_with_channel_shift__direct__other_1 + year_1__current_with_channel_shift__direct__other_2, year_1__current_with_channel_shift__indirect__amadeus = cost_per_pb__current__indirect__amadeus * this.indirect().amadeus.year_1.pax_boarded.sita, year_1__current_with_channel_shift__indirect__sabre = cost_per_pb__current__indirect__sabre * this.indirect().sabre.year_1.pax_boarded.sita, year_1__current_with_channel_shift__indirect__galileo = cost_per_pb__current__indirect__galileo * this.indirect().galileo.year_1.pax_boarded.sita, year_1__current_with_channel_shift__indirect__abacus = cost_per_pb__current__indirect__abacus * this.indirect().abacus.year_1.pax_boarded.sita, year_1__current_with_channel_shift__indirect__other_1 = 0 * cost_per_pb__current__indirect__other_1, year_1__current_with_channel_shift__indirect__other_2 = 0 * cost_per_pb__current__indirect__other_2, year_1__current_with_channel_shift__indirect__total = year_1__current_with_channel_shift__indirect__amadeus + year_1__current_with_channel_shift__indirect__sabre + year_1__current_with_channel_shift__indirect__galileo + year_1__current_with_channel_shift__indirect__abacus + year_1__current_with_channel_shift__indirect__other_1 + year_1__current_with_channel_shift__indirect__other_2, year_1__current_with_channel_shift__totals = year_1__current_with_channel_shift__direct__total + year_1__current_with_channel_shift__indirect__total, year_1__sita__direct__call_centre = cost_per_pb__sita__direct__call_centre * this.direct().call_centre.year_1.pax_boarded.sita, year_1__sita__direct__ecommerce = cost_per_pb__sita__direct__ecommerce * this.direct().ecommerce.year_1.pax_boarded.sita, year_1__sita__direct__a2a = cost_per_pb__sita__direct__a2a * this.direct().a2a.year_1.pax_boarded.sita, year_1__sita__direct__mobile = cost_per_pb__sita__direct__mobile * this.direct().mobile.year_1.pax_boarded.sita, year_1__sita__direct__other_1 = 0 * cost_per_pb__sita__direct__other_1, year_1__sita__direct__other_2 = 0 * cost_per_pb__sita__direct__other_2, year_1__sita__direct__total = year_1__sita__direct__call_centre + year_1__sita__direct__ecommerce + year_1__sita__direct__a2a + year_1__sita__direct__mobile + year_1__sita__direct__other_1 + year_1__sita__direct__other_2, year_1__sita__indirect__amadeus = cost_per_pb__sita__indirect__amadeus * this.indirect().amadeus.year_1.pax_boarded.sita, year_1__sita__indirect__sabre = cost_per_pb__sita__indirect__sabre * this.indirect().sabre.year_1.pax_boarded.sita, year_1__sita__indirect__galileo = cost_per_pb__sita__indirect__galileo * this.indirect().galileo.year_1.pax_boarded.sita, year_1__sita__indirect__abacus = cost_per_pb__sita__indirect__abacus * this.indirect().abacus.year_1.pax_boarded.sita, year_1__sita__indirect__other_1 = 0 * cost_per_pb__sita__indirect__other_1, year_1__sita__indirect__other_2 = 0 * cost_per_pb__sita__indirect__other_2, year_1__sita__indirect__total = year_1__sita__indirect__amadeus + year_1__sita__indirect__sabre + year_1__sita__indirect__galileo + year_1__sita__indirect__abacus + year_1__sita__indirect__other_1 + year_1__sita__indirect__other_2, year_1__sita__totals = year_1__sita__direct__total + year_1__sita__indirect__total, year_1__difference__supplier_does_not_shift = year_1__current__totals - year_1__sita__totals, year_1__difference__supplier_shifts = year_1__current_with_channel_shift__totals - year_1__sita__totals;
            year_1__difference__supplier_does_not_shift = parseFloat(year_1__difference__supplier_does_not_shift.toFixed(2)), 
            year_1__difference__supplier_shifts = parseFloat(year_1__difference__supplier_shifts.toFixed(2));
            var year_2__current__direct__call_centre = cost_per_pb__current__direct__call_centre * this.direct().call_centre.year_2.pax_boarded.current, year_2__current__direct__ecommerce = cost_per_pb__current__direct__ecommerce * this.direct().ecommerce.year_2.pax_boarded.current, year_2__current__direct__a2a = cost_per_pb__current__direct__a2a * this.direct().a2a.year_2.pax_boarded.current, year_2__current__direct__mobile = cost_per_pb__current__direct__mobile * this.direct().mobile.year_2.pax_boarded.current, year_2__current__direct__other_1 = 0 * cost_per_pb__current__direct__other_1, year_2__current__direct__other_2 = 0 * cost_per_pb__current__direct__other_2, year_2__current__direct__total = year_2__current__direct__call_centre + year_2__current__direct__ecommerce + year_2__current__direct__a2a + year_2__current__direct__mobile + year_2__current__direct__other_1 + year_2__current__direct__other_2, year_2__current__indirect__amadeus = cost_per_pb__current__indirect__amadeus * this.indirect().amadeus.year_2.pax_boarded.current, year_2__current__indirect__sabre = cost_per_pb__current__indirect__sabre * this.indirect().sabre.year_2.pax_boarded.current, year_2__current__indirect__galileo = cost_per_pb__current__indirect__galileo * this.indirect().galileo.year_2.pax_boarded.current, year_2__current__indirect__abacus = cost_per_pb__current__indirect__abacus * this.indirect().abacus.year_2.pax_boarded.current, year_2__current__indirect__other_1 = 0 * cost_per_pb__current__indirect__other_1, year_2__current__indirect__other_2 = 0 * cost_per_pb__current__indirect__other_2, year_2__current__indirect__total = year_2__current__indirect__amadeus + year_2__current__indirect__sabre + year_2__current__indirect__galileo + year_2__current__indirect__abacus + year_2__current__indirect__other_1 + year_2__current__indirect__other_2, year_2__current__totals = year_2__current__direct__total + year_2__current__indirect__total, year_2__current_with_channel_shift__direct__call_centre = cost_per_pb__current__direct__call_centre * this.direct().call_centre.year_2.pax_boarded.sita, year_2__current_with_channel_shift__direct__ecommerce = cost_per_pb__current__direct__ecommerce * this.direct().ecommerce.year_2.pax_boarded.sita, year_2__current_with_channel_shift__direct__a2a = cost_per_pb__current__direct__a2a * this.direct().a2a.year_2.pax_boarded.sita, year_2__current_with_channel_shift__direct__mobile = cost_per_pb__current__direct__mobile * this.direct().mobile.year_2.pax_boarded.sita, year_2__current_with_channel_shift__direct__other_1 = 0 * cost_per_pb__current__direct__other_1, year_2__current_with_channel_shift__direct__other_2 = 0 * cost_per_pb__current__direct__other_2, year_2__current_with_channel_shift__direct__total = year_2__current_with_channel_shift__direct__call_centre + year_2__current_with_channel_shift__direct__ecommerce + year_2__current_with_channel_shift__direct__a2a + year_2__current_with_channel_shift__direct__mobile + year_2__current_with_channel_shift__direct__other_1 + year_2__current_with_channel_shift__direct__other_2, year_2__current_with_channel_shift__indirect__amadeus = cost_per_pb__current__indirect__amadeus * this.indirect().amadeus.year_2.pax_boarded.sita, year_2__current_with_channel_shift__indirect__sabre = cost_per_pb__current__indirect__sabre * this.indirect().sabre.year_2.pax_boarded.sita, year_2__current_with_channel_shift__indirect__galileo = cost_per_pb__current__indirect__galileo * this.indirect().galileo.year_2.pax_boarded.sita, year_2__current_with_channel_shift__indirect__abacus = cost_per_pb__current__indirect__abacus * this.indirect().abacus.year_2.pax_boarded.sita, year_2__current_with_channel_shift__indirect__other_1 = 0 * cost_per_pb__current__indirect__other_1, year_2__current_with_channel_shift__indirect__other_2 = 0 * cost_per_pb__current__indirect__other_2, year_2__current_with_channel_shift__indirect__total = year_2__current_with_channel_shift__indirect__amadeus + year_2__current_with_channel_shift__indirect__sabre + year_2__current_with_channel_shift__indirect__galileo + year_2__current_with_channel_shift__indirect__abacus + year_2__current_with_channel_shift__indirect__other_1 + year_2__current_with_channel_shift__indirect__other_2, year_2__current_with_channel_shift__totals = year_2__current_with_channel_shift__direct__total + year_2__current_with_channel_shift__indirect__total, year_2__sita__direct__call_centre = cost_per_pb__sita__direct__call_centre * this.direct().call_centre.year_2.pax_boarded.sita, year_2__sita__direct__ecommerce = cost_per_pb__sita__direct__ecommerce * this.direct().ecommerce.year_2.pax_boarded.sita, year_2__sita__direct__a2a = cost_per_pb__sita__direct__a2a * this.direct().a2a.year_2.pax_boarded.sita, year_2__sita__direct__mobile = cost_per_pb__sita__direct__mobile * this.direct().mobile.year_2.pax_boarded.sita, year_2__sita__direct__other_1 = 0 * cost_per_pb__sita__direct__other_1, year_2__sita__direct__other_2 = 0 * cost_per_pb__sita__direct__other_2, year_2__sita__direct__total = year_2__sita__direct__call_centre + year_2__sita__direct__ecommerce + year_2__sita__direct__a2a + year_2__sita__direct__mobile + year_2__sita__direct__other_1 + year_2__sita__direct__other_2, year_2__sita__indirect__amadeus = cost_per_pb__sita__indirect__amadeus * this.indirect().amadeus.year_2.pax_boarded.sita, year_2__sita__indirect__sabre = cost_per_pb__sita__indirect__sabre * this.indirect().sabre.year_2.pax_boarded.sita, year_2__sita__indirect__galileo = cost_per_pb__sita__indirect__galileo * this.indirect().galileo.year_2.pax_boarded.sita, year_2__sita__indirect__abacus = cost_per_pb__sita__indirect__abacus * this.indirect().abacus.year_2.pax_boarded.sita, year_2__sita__indirect__other_1 = 0 * cost_per_pb__sita__indirect__other_1, year_2__sita__indirect__other_2 = 0 * cost_per_pb__sita__indirect__other_2, year_2__sita__indirect__total = year_2__sita__indirect__amadeus + year_2__sita__indirect__sabre + year_2__sita__indirect__galileo + year_2__sita__indirect__abacus + year_2__sita__indirect__other_1 + year_2__sita__indirect__other_2, year_2__sita__totals = year_2__sita__direct__total + year_2__sita__indirect__total, year_2__difference__supplier_does_not_shift = year_2__current__totals - year_2__sita__totals, year_2__difference__supplier_shifts = year_2__current_with_channel_shift__totals - year_2__sita__totals;
            year_2__difference__supplier_does_not_shift = parseFloat(year_2__difference__supplier_does_not_shift.toFixed(2)), 
            year_2__difference__supplier_shifts = parseFloat(year_2__difference__supplier_shifts.toFixed(2));
            var year_3__current__direct__call_centre = cost_per_pb__current__direct__call_centre * this.direct().call_centre.year_3.pax_boarded.current, year_3__current__direct__ecommerce = cost_per_pb__current__direct__ecommerce * this.direct().ecommerce.year_3.pax_boarded.current, year_3__current__direct__a2a = cost_per_pb__current__direct__a2a * this.direct().a2a.year_3.pax_boarded.current, year_3__current__direct__mobile = cost_per_pb__current__direct__mobile * this.direct().mobile.year_3.pax_boarded.current, year_3__current__direct__other_1 = 0 * cost_per_pb__current__direct__other_1, year_3__current__direct__other_2 = 0 * cost_per_pb__current__direct__other_2, year_3__current__direct__total = year_3__current__direct__call_centre + year_3__current__direct__ecommerce + year_3__current__direct__a2a + year_3__current__direct__mobile + year_3__current__direct__other_1 + year_3__current__direct__other_2, year_3__current__indirect__amadeus = cost_per_pb__current__indirect__amadeus * this.indirect().amadeus.year_3.pax_boarded.current, year_3__current__indirect__sabre = cost_per_pb__current__indirect__sabre * this.indirect().sabre.year_3.pax_boarded.current, year_3__current__indirect__galileo = cost_per_pb__current__indirect__galileo * this.indirect().galileo.year_3.pax_boarded.current, year_3__current__indirect__abacus = cost_per_pb__current__indirect__abacus * this.indirect().abacus.year_3.pax_boarded.current, year_3__current__indirect__other_1 = 0 * cost_per_pb__current__indirect__other_1, year_3__current__indirect__other_2 = 0 * cost_per_pb__current__indirect__other_2, year_3__current__indirect__total = year_3__current__indirect__amadeus + year_3__current__indirect__sabre + year_3__current__indirect__galileo + year_3__current__indirect__abacus + year_3__current__indirect__other_1 + year_3__current__indirect__other_2, year_3__current__totals = year_3__current__direct__total + year_3__current__indirect__total, year_3__current_with_channel_shift__direct__call_centre = cost_per_pb__current__direct__call_centre * this.direct().call_centre.year_3.pax_boarded.sita, year_3__current_with_channel_shift__direct__ecommerce = cost_per_pb__current__direct__ecommerce * this.direct().ecommerce.year_3.pax_boarded.sita, year_3__current_with_channel_shift__direct__a2a = cost_per_pb__current__direct__a2a * this.direct().a2a.year_3.pax_boarded.sita, year_3__current_with_channel_shift__direct__mobile = cost_per_pb__current__direct__mobile * this.direct().mobile.year_3.pax_boarded.sita, year_3__current_with_channel_shift__direct__other_1 = 0 * cost_per_pb__current__direct__other_1, year_3__current_with_channel_shift__direct__other_2 = 0 * cost_per_pb__current__direct__other_2, year_3__current_with_channel_shift__direct__total = year_3__current_with_channel_shift__direct__call_centre + year_3__current_with_channel_shift__direct__ecommerce + year_3__current_with_channel_shift__direct__a2a + year_3__current_with_channel_shift__direct__mobile + year_3__current_with_channel_shift__direct__other_1 + year_3__current_with_channel_shift__direct__other_2, year_3__current_with_channel_shift__indirect__amadeus = cost_per_pb__current__indirect__amadeus * this.indirect().amadeus.year_3.pax_boarded.sita, year_3__current_with_channel_shift__indirect__sabre = cost_per_pb__current__indirect__sabre * this.indirect().sabre.year_3.pax_boarded.sita, year_3__current_with_channel_shift__indirect__galileo = cost_per_pb__current__indirect__galileo * this.indirect().galileo.year_3.pax_boarded.sita, year_3__current_with_channel_shift__indirect__abacus = cost_per_pb__current__indirect__abacus * this.indirect().abacus.year_3.pax_boarded.sita, year_3__current_with_channel_shift__indirect__other_1 = 0 * cost_per_pb__current__indirect__other_1, year_3__current_with_channel_shift__indirect__other_2 = 0 * cost_per_pb__current__indirect__other_2, year_3__current_with_channel_shift__indirect__total = year_3__current_with_channel_shift__indirect__amadeus + year_3__current_with_channel_shift__indirect__sabre + year_3__current_with_channel_shift__indirect__galileo + year_3__current_with_channel_shift__indirect__abacus + year_3__current_with_channel_shift__indirect__other_1 + year_3__current_with_channel_shift__indirect__other_2, year_3__current_with_channel_shift__totals = year_3__current_with_channel_shift__direct__total + year_3__current_with_channel_shift__indirect__total, year_3__sita__direct__call_centre = cost_per_pb__sita__direct__call_centre * this.direct().call_centre.year_3.pax_boarded.sita, year_3__sita__direct__ecommerce = cost_per_pb__sita__direct__ecommerce * this.direct().ecommerce.year_3.pax_boarded.sita, year_3__sita__direct__a2a = cost_per_pb__sita__direct__a2a * this.direct().a2a.year_3.pax_boarded.sita, year_3__sita__direct__mobile = cost_per_pb__sita__direct__mobile * this.direct().mobile.year_3.pax_boarded.sita, year_3__sita__direct__other_1 = 0 * cost_per_pb__sita__direct__other_1, year_3__sita__direct__other_2 = 0 * cost_per_pb__sita__direct__other_2, year_3__sita__direct__total = year_3__sita__direct__call_centre + year_3__sita__direct__ecommerce + year_3__sita__direct__a2a + year_3__sita__direct__mobile + year_3__sita__direct__other_1 + year_3__sita__direct__other_2, year_3__sita__indirect__amadeus = cost_per_pb__sita__indirect__amadeus * this.indirect().amadeus.year_3.pax_boarded.sita, year_3__sita__indirect__sabre = cost_per_pb__sita__indirect__sabre * this.indirect().sabre.year_3.pax_boarded.sita, year_3__sita__indirect__galileo = cost_per_pb__sita__indirect__galileo * this.indirect().galileo.year_3.pax_boarded.sita, year_3__sita__indirect__abacus = cost_per_pb__sita__indirect__abacus * this.indirect().abacus.year_3.pax_boarded.sita, year_3__sita__indirect__other_1 = 0 * cost_per_pb__sita__indirect__other_1, year_3__sita__indirect__other_2 = 0 * cost_per_pb__sita__indirect__other_2, year_3__sita__indirect__total = year_3__sita__indirect__amadeus + year_3__sita__indirect__sabre + year_3__sita__indirect__galileo + year_3__sita__indirect__abacus + year_3__sita__indirect__other_1 + year_3__sita__indirect__other_2, year_3__sita__totals = year_3__sita__direct__total + year_3__sita__indirect__total, year_3__difference__supplier_does_not_shift = year_3__current__totals - year_3__sita__totals, year_3__difference__supplier_shifts = year_3__current_with_channel_shift__totals - year_3__sita__totals;
            year_3__difference__supplier_does_not_shift = parseFloat(year_3__difference__supplier_does_not_shift.toFixed(2)), 
            year_3__difference__supplier_shifts = parseFloat(year_3__difference__supplier_shifts.toFixed(2));
            var year_4__current__direct__call_centre = cost_per_pb__current__direct__call_centre * this.direct().call_centre.year_4.pax_boarded.current, year_4__current__direct__ecommerce = cost_per_pb__current__direct__ecommerce * this.direct().ecommerce.year_4.pax_boarded.current, year_4__current__direct__a2a = cost_per_pb__current__direct__a2a * this.direct().a2a.year_4.pax_boarded.current, year_4__current__direct__mobile = cost_per_pb__current__direct__mobile * this.direct().mobile.year_4.pax_boarded.current, year_4__current__direct__other_1 = 0 * cost_per_pb__current__direct__other_1, year_4__current__direct__other_2 = 0 * cost_per_pb__current__direct__other_2, year_4__current__direct__total = year_4__current__direct__call_centre + year_4__current__direct__ecommerce + year_4__current__direct__a2a + year_4__current__direct__mobile + year_4__current__direct__other_1 + year_4__current__direct__other_2, year_4__current__indirect__amadeus = cost_per_pb__current__indirect__amadeus * this.indirect().amadeus.year_4.pax_boarded.current, year_4__current__indirect__sabre = cost_per_pb__current__indirect__sabre * this.indirect().sabre.year_4.pax_boarded.current, year_4__current__indirect__galileo = cost_per_pb__current__indirect__galileo * this.indirect().galileo.year_4.pax_boarded.current, year_4__current__indirect__abacus = cost_per_pb__current__indirect__abacus * this.indirect().abacus.year_4.pax_boarded.current, year_4__current__indirect__other_1 = 0 * cost_per_pb__current__indirect__other_1, year_4__current__indirect__other_2 = 0 * cost_per_pb__current__indirect__other_2, year_4__current__indirect__total = year_4__current__indirect__amadeus + year_4__current__indirect__sabre + year_4__current__indirect__galileo + year_4__current__indirect__abacus + year_4__current__indirect__other_1 + year_4__current__indirect__other_2, year_4__current__totals = year_4__current__direct__total + year_4__current__indirect__total, year_4__current_with_channel_shift__direct__call_centre = cost_per_pb__current__direct__call_centre * this.direct().call_centre.year_4.pax_boarded.sita, year_4__current_with_channel_shift__direct__ecommerce = cost_per_pb__current__direct__ecommerce * this.direct().ecommerce.year_4.pax_boarded.sita, year_4__current_with_channel_shift__direct__a2a = cost_per_pb__current__direct__a2a * this.direct().a2a.year_4.pax_boarded.sita, year_4__current_with_channel_shift__direct__mobile = cost_per_pb__current__direct__mobile * this.direct().mobile.year_4.pax_boarded.sita, year_4__current_with_channel_shift__direct__other_1 = 0 * cost_per_pb__current__direct__other_1, year_4__current_with_channel_shift__direct__other_2 = 0 * cost_per_pb__current__direct__other_2, year_4__current_with_channel_shift__direct__total = year_4__current_with_channel_shift__direct__call_centre + year_4__current_with_channel_shift__direct__ecommerce + year_4__current_with_channel_shift__direct__a2a + year_4__current_with_channel_shift__direct__mobile + year_4__current_with_channel_shift__direct__other_1 + year_4__current_with_channel_shift__direct__other_2, year_4__current_with_channel_shift__indirect__amadeus = cost_per_pb__current__indirect__amadeus * this.indirect().amadeus.year_4.pax_boarded.sita, year_4__current_with_channel_shift__indirect__sabre = cost_per_pb__current__indirect__sabre * this.indirect().sabre.year_4.pax_boarded.sita, year_4__current_with_channel_shift__indirect__galileo = cost_per_pb__current__indirect__galileo * this.indirect().galileo.year_4.pax_boarded.sita, year_4__current_with_channel_shift__indirect__abacus = cost_per_pb__current__indirect__abacus * this.indirect().abacus.year_4.pax_boarded.sita, year_4__current_with_channel_shift__indirect__other_1 = 0 * cost_per_pb__current__indirect__other_1, year_4__current_with_channel_shift__indirect__other_2 = 0 * cost_per_pb__current__indirect__other_2, year_4__current_with_channel_shift__indirect__total = year_4__current_with_channel_shift__indirect__amadeus + year_4__current_with_channel_shift__indirect__sabre + year_4__current_with_channel_shift__indirect__galileo + year_4__current_with_channel_shift__indirect__abacus + year_4__current_with_channel_shift__indirect__other_1 + year_4__current_with_channel_shift__indirect__other_2, year_4__current_with_channel_shift__totals = year_4__current_with_channel_shift__direct__total + year_4__current_with_channel_shift__indirect__total, year_4__sita__direct__call_centre = cost_per_pb__sita__direct__call_centre * this.direct().call_centre.year_4.pax_boarded.sita, year_4__sita__direct__ecommerce = cost_per_pb__sita__direct__ecommerce * this.direct().ecommerce.year_4.pax_boarded.sita, year_4__sita__direct__a2a = cost_per_pb__sita__direct__a2a * this.direct().a2a.year_4.pax_boarded.sita, year_4__sita__direct__mobile = cost_per_pb__sita__direct__mobile * this.direct().mobile.year_4.pax_boarded.sita, year_4__sita__direct__other_1 = 0 * cost_per_pb__sita__direct__other_1, year_4__sita__direct__other_2 = 0 * cost_per_pb__sita__direct__other_2, year_4__sita__direct__total = year_4__sita__direct__call_centre + year_4__sita__direct__ecommerce + year_4__sita__direct__a2a + year_4__sita__direct__mobile + year_4__sita__direct__other_1 + year_4__sita__direct__other_2, year_4__sita__indirect__amadeus = cost_per_pb__sita__indirect__amadeus * this.indirect().amadeus.year_4.pax_boarded.sita, year_4__sita__indirect__sabre = cost_per_pb__sita__indirect__sabre * this.indirect().sabre.year_4.pax_boarded.sita, year_4__sita__indirect__galileo = cost_per_pb__sita__indirect__galileo * this.indirect().galileo.year_4.pax_boarded.sita, year_4__sita__indirect__abacus = cost_per_pb__sita__indirect__abacus * this.indirect().abacus.year_4.pax_boarded.sita, year_4__sita__indirect__other_1 = 0 * cost_per_pb__sita__indirect__other_1, year_4__sita__indirect__other_2 = 0 * cost_per_pb__sita__indirect__other_2, year_4__sita__indirect__total = year_4__sita__indirect__amadeus + year_4__sita__indirect__sabre + year_4__sita__indirect__galileo + year_4__sita__indirect__abacus + year_4__sita__indirect__other_1 + year_4__sita__indirect__other_2, year_4__sita__totals = year_4__sita__direct__total + year_4__sita__indirect__total, year_4__difference__supplier_does_not_shift = year_4__current__totals - year_4__sita__totals, year_4__difference__supplier_shifts = year_4__current_with_channel_shift__totals - year_4__sita__totals;
            year_4__difference__supplier_does_not_shift = parseFloat(year_4__difference__supplier_does_not_shift.toFixed(2)), 
            year_4__difference__supplier_shifts = parseFloat(year_4__difference__supplier_shifts.toFixed(2));
            var year_5__current__direct__call_centre = cost_per_pb__current__direct__call_centre * this.direct().call_centre.year_5.pax_boarded.current, year_5__current__direct__ecommerce = cost_per_pb__current__direct__ecommerce * this.direct().ecommerce.year_5.pax_boarded.current, year_5__current__direct__a2a = cost_per_pb__current__direct__a2a * this.direct().a2a.year_5.pax_boarded.current, year_5__current__direct__mobile = cost_per_pb__current__direct__mobile * this.direct().mobile.year_5.pax_boarded.current, year_5__current__direct__other_1 = 0 * cost_per_pb__current__direct__other_1, year_5__current__direct__other_2 = 0 * cost_per_pb__current__direct__other_2, year_5__current__direct__total = year_5__current__direct__call_centre + year_5__current__direct__ecommerce + year_5__current__direct__a2a + year_5__current__direct__mobile + year_5__current__direct__other_1 + year_5__current__direct__other_2, year_5__current__indirect__amadeus = cost_per_pb__current__indirect__amadeus * this.indirect().amadeus.year_5.pax_boarded.current, year_5__current__indirect__sabre = cost_per_pb__current__indirect__sabre * this.indirect().sabre.year_5.pax_boarded.current, year_5__current__indirect__galileo = cost_per_pb__current__indirect__galileo * this.indirect().galileo.year_5.pax_boarded.current, year_5__current__indirect__abacus = cost_per_pb__current__indirect__abacus * this.indirect().abacus.year_5.pax_boarded.current, year_5__current__indirect__other_1 = 0 * cost_per_pb__current__indirect__other_1, year_5__current__indirect__other_2 = 0 * cost_per_pb__current__indirect__other_2, year_5__current__indirect__total = year_5__current__indirect__amadeus + year_5__current__indirect__sabre + year_5__current__indirect__galileo + year_5__current__indirect__abacus + year_5__current__indirect__other_1 + year_5__current__indirect__other_2, year_5__current__totals = year_5__current__direct__total + year_5__current__indirect__total, year_5__current_with_channel_shift__direct__call_centre = cost_per_pb__current__direct__call_centre * this.direct().call_centre.year_5.pax_boarded.sita, year_5__current_with_channel_shift__direct__ecommerce = cost_per_pb__current__direct__ecommerce * this.direct().ecommerce.year_5.pax_boarded.sita, year_5__current_with_channel_shift__direct__a2a = cost_per_pb__current__direct__a2a * this.direct().a2a.year_5.pax_boarded.sita, year_5__current_with_channel_shift__direct__mobile = cost_per_pb__current__direct__mobile * this.direct().mobile.year_5.pax_boarded.sita, year_5__current_with_channel_shift__direct__other_1 = 0 * cost_per_pb__current__direct__other_1, year_5__current_with_channel_shift__direct__other_2 = 0 * cost_per_pb__current__direct__other_2, year_5__current_with_channel_shift__direct__total = year_5__current_with_channel_shift__direct__call_centre + year_5__current_with_channel_shift__direct__ecommerce + year_5__current_with_channel_shift__direct__a2a + year_5__current_with_channel_shift__direct__mobile + year_5__current_with_channel_shift__direct__other_1 + year_5__current_with_channel_shift__direct__other_2, year_5__current_with_channel_shift__indirect__amadeus = cost_per_pb__current__indirect__amadeus * this.indirect().amadeus.year_5.pax_boarded.sita, year_5__current_with_channel_shift__indirect__sabre = cost_per_pb__current__indirect__sabre * this.indirect().sabre.year_5.pax_boarded.sita, year_5__current_with_channel_shift__indirect__galileo = cost_per_pb__current__indirect__galileo * this.indirect().galileo.year_5.pax_boarded.sita, year_5__current_with_channel_shift__indirect__abacus = cost_per_pb__current__indirect__abacus * this.indirect().abacus.year_5.pax_boarded.sita, year_5__current_with_channel_shift__indirect__other_1 = 0 * cost_per_pb__current__indirect__other_1, year_5__current_with_channel_shift__indirect__other_2 = 0 * cost_per_pb__current__indirect__other_2, year_5__current_with_channel_shift__indirect__total = year_5__current_with_channel_shift__indirect__amadeus + year_5__current_with_channel_shift__indirect__sabre + year_5__current_with_channel_shift__indirect__galileo + year_5__current_with_channel_shift__indirect__abacus + year_5__current_with_channel_shift__indirect__other_1 + year_5__current_with_channel_shift__indirect__other_2, year_5__current_with_channel_shift__totals = year_5__current_with_channel_shift__direct__total + year_5__current_with_channel_shift__indirect__total, year_5__sita__direct__call_centre = cost_per_pb__sita__direct__call_centre * this.direct().call_centre.year_5.pax_boarded.sita, year_5__sita__direct__ecommerce = cost_per_pb__sita__direct__ecommerce * this.direct().ecommerce.year_5.pax_boarded.sita, year_5__sita__direct__a2a = cost_per_pb__sita__direct__a2a * this.direct().a2a.year_5.pax_boarded.sita, year_5__sita__direct__mobile = cost_per_pb__sita__direct__mobile * this.direct().mobile.year_5.pax_boarded.sita, year_5__sita__direct__other_1 = 0 * cost_per_pb__sita__direct__other_1, year_5__sita__direct__other_2 = 0 * cost_per_pb__sita__direct__other_2, year_5__sita__direct__total = year_5__sita__direct__call_centre + year_5__sita__direct__ecommerce + year_5__sita__direct__a2a + year_5__sita__direct__mobile + year_5__sita__direct__other_1 + year_5__sita__direct__other_2, year_5__sita__indirect__amadeus = cost_per_pb__sita__indirect__amadeus * this.indirect().amadeus.year_5.pax_boarded.sita, year_5__sita__indirect__sabre = cost_per_pb__sita__indirect__sabre * this.indirect().sabre.year_5.pax_boarded.sita, year_5__sita__indirect__galileo = cost_per_pb__sita__indirect__galileo * this.indirect().galileo.year_5.pax_boarded.sita, year_5__sita__indirect__abacus = cost_per_pb__sita__indirect__abacus * this.indirect().abacus.year_5.pax_boarded.sita, year_5__sita__indirect__other_1 = 0 * cost_per_pb__sita__indirect__other_1, year_5__sita__indirect__other_2 = 0 * cost_per_pb__sita__indirect__other_2, year_5__sita__indirect__total = year_5__sita__indirect__amadeus + year_5__sita__indirect__sabre + year_5__sita__indirect__galileo + year_5__sita__indirect__abacus + year_5__sita__indirect__other_1 + year_5__sita__indirect__other_2, year_5__sita__totals = year_5__sita__direct__total + year_5__sita__indirect__total, year_5__difference__supplier_does_not_shift = year_5__current__totals - year_5__sita__totals, year_5__difference__supplier_shifts = year_5__current_with_channel_shift__totals - year_5__sita__totals;
            year_5__difference__supplier_does_not_shift = parseFloat(year_5__difference__supplier_does_not_shift.toFixed(2)), 
            year_5__difference__supplier_shifts = parseFloat(year_5__difference__supplier_shifts.toFixed(2));
            var total__difference__supplier_does_not_shift = year_1__difference__supplier_does_not_shift + year_2__difference__supplier_does_not_shift + year_3__difference__supplier_does_not_shift + year_4__difference__supplier_does_not_shift + year_5__difference__supplier_does_not_shift, total__difference__supplier_shifts = year_1__difference__supplier_shifts + year_2__difference__supplier_shifts + year_3__difference__supplier_shifts + year_4__difference__supplier_shifts + year_5__difference__supplier_shifts;
            return {
                cost_per_pb: {
                    current: {
                        direct: {
                            call_centre: cost_per_pb__current__direct__call_centre,
                            ecommerce: cost_per_pb__current__direct__ecommerce,
                            a2a: cost_per_pb__current__direct__a2a,
                            mobile: cost_per_pb__current__direct__mobile,
                            other_2: cost_per_pb__current__direct__other_1,
                            other_1: cost_per_pb__current__direct__other_2
                        },
                        indirect: {
                            amadeus: cost_per_pb__current__indirect__amadeus,
                            sabre: cost_per_pb__current__indirect__sabre,
                            galileo: cost_per_pb__current__indirect__galileo,
                            abacus: cost_per_pb__current__indirect__abacus,
                            other_1: cost_per_pb__current__indirect__other_1,
                            other_2: cost_per_pb__current__indirect__other_2
                        }
                    },
                    sita: {
                        direct: {
                            call_centre: cost_per_pb__sita__direct__call_centre,
                            ecommerce: cost_per_pb__sita__direct__ecommerce,
                            a2a: cost_per_pb__sita__direct__a2a,
                            mobile: cost_per_pb__sita__direct__mobile,
                            other_1: cost_per_pb__sita__direct__other_1,
                            other_2: cost_per_pb__sita__direct__other_2
                        },
                        indirect: {
                            amadeus: cost_per_pb__sita__indirect__amadeus,
                            sabre: cost_per_pb__sita__indirect__sabre,
                            galileo: cost_per_pb__sita__indirect__galileo,
                            abacus: cost_per_pb__sita__indirect__abacus,
                            other_1: cost_per_pb__sita__indirect__other_1,
                            other_2: cost_per_pb__sita__indirect__other_2
                        }
                    }
                },
                current: {
                    current: {
                        direct: {
                            total: current__current__direct__total,
                            call_centre: current__current__direct__call_centre,
                            ecommerce: current__current__direct__ecommerce,
                            a2a: current__current__direct__a2a,
                            mobile: current__current__direct__mobile,
                            other_1: current__current__direct__other_1,
                            other_2: current__current__direct__other_2
                        },
                        indirect: {
                            total: current__current__indirect__total,
                            amadeus: current__current__indirect__amadeus,
                            sabre: current__current__indirect__sabre,
                            galileo: current__current__indirect__galileo,
                            abacus: current__current__indirect__abacus,
                            other_1: current__current__indirect__other_1,
                            other_2: current__current__indirect__other_2
                        },
                        total: current__current__total
                    },
                    sita: {
                        direct: {
                            total: current__sita__direct__total,
                            call_centre: current__sita__direct__call_centre,
                            ecommerce: current__sita__direct__ecommerce,
                            a2a: current__sita__direct__a2a,
                            mobile: current__sita__direct__mobile,
                            other_1: current__sita__direct__other_1,
                            other_2: current__sita__direct__other_2
                        },
                        indirect: {
                            total: current__sita__indirect__total,
                            amadeus: current__sita__indirect__amadeus,
                            sabre: current__sita__indirect__sabre,
                            galileo: current__sita__indirect__galileo,
                            abacus: current__sita__indirect__abacus,
                            other_1: current__sita__indirect__other_1,
                            other_2: current__sita__indirect__other_2
                        },
                        total: current__sita__total
                    },
                    supplier_does_not_shift__difference: current__supplier_does_not_shift__difference,
                    supplier_shifts__difference: 0
                },
                year_1: {
                    current: {
                        direct: {
                            total: year_1__current__direct__total,
                            call_centre: year_1__current__direct__call_centre,
                            ecommerce: year_1__current__direct__ecommerce,
                            a2a: year_1__current__direct__a2a,
                            mobile: year_1__current__direct__mobile,
                            other_1: year_1__current__direct__other_1,
                            other_2: year_1__current__direct__other_2
                        },
                        indirect: {
                            total: year_1__current__indirect__total,
                            amadeus: year_1__current__indirect__amadeus,
                            sabre: year_1__current__indirect__sabre,
                            galileo: year_1__current__indirect__galileo,
                            abacus: year_1__current__indirect__abacus,
                            other_1: year_1__current__indirect__other_1,
                            other_2: year_1__current__indirect__other_2
                        },
                        total: year_1__current__totals
                    },
                    current_with_channel_shift: {
                        direct: {
                            total: year_1__current_with_channel_shift__direct__total,
                            call_centre: year_1__current_with_channel_shift__direct__call_centre,
                            ecommerce: year_1__current_with_channel_shift__direct__ecommerce,
                            a2a: year_1__current_with_channel_shift__direct__a2a,
                            mobile: year_1__current_with_channel_shift__direct__mobile,
                            other_1: year_1__current_with_channel_shift__direct__other_1,
                            other_2: year_1__current_with_channel_shift__direct__other_2
                        },
                        indirect: {
                            total: year_1__current_with_channel_shift__indirect__total,
                            amadeus: year_1__current_with_channel_shift__indirect__amadeus,
                            sabre: year_1__current_with_channel_shift__indirect__sabre,
                            galileo: year_1__current_with_channel_shift__indirect__galileo,
                            abacus: year_1__current_with_channel_shift__indirect__abacus,
                            other_1: year_1__current_with_channel_shift__indirect__other_1,
                            other_2: year_1__current_with_channel_shift__indirect__other_2
                        },
                        total: year_1__current_with_channel_shift__totals
                    },
                    sita: {
                        direct: {
                            total: year_1__sita__direct__total,
                            call_centre: year_1__sita__direct__call_centre,
                            ecommerce: year_1__sita__direct__ecommerce,
                            a2a: year_1__sita__direct__a2a,
                            mobile: year_1__sita__direct__mobile,
                            other_1: year_1__sita__direct__other_1,
                            other_2: year_1__sita__direct__other_2
                        },
                        indirect: {
                            total: year_1__sita__indirect__total,
                            amadeus: year_1__sita__indirect__amadeus,
                            sabre: year_1__sita__indirect__sabre,
                            galileo: year_1__sita__indirect__galileo,
                            abacus: year_1__sita__indirect__abacus,
                            other_1: year_1__sita__indirect__other_1,
                            other_2: year_1__sita__indirect__other_2
                        },
                        total: year_1__sita__totals
                    },
                    supplier_does_not_shift__difference: year_1__difference__supplier_does_not_shift,
                    supplier_shifts__difference: year_1__difference__supplier_shifts
                },
                year_2: {
                    current: {
                        direct: {
                            total: year_2__current__direct__total,
                            call_centre: year_2__current__direct__call_centre,
                            ecommerce: year_2__current__direct__ecommerce,
                            a2a: year_2__current__direct__a2a,
                            mobile: year_2__current__direct__mobile,
                            other_1: year_2__current__direct__other_1,
                            other_2: year_2__current__direct__other_2
                        },
                        indirect: {
                            total: year_2__current__indirect__total,
                            amadeus: year_2__current__indirect__amadeus,
                            sabre: year_2__current__indirect__sabre,
                            galileo: year_2__current__indirect__galileo,
                            abacus: year_2__current__indirect__abacus,
                            other_1: year_2__current__indirect__other_1,
                            other_2: year_2__current__indirect__other_2
                        },
                        total: year_2__current__totals
                    },
                    current_with_channel_shift: {
                        direct: {
                            total: year_2__current_with_channel_shift__direct__total,
                            call_centre: year_2__current_with_channel_shift__direct__call_centre,
                            ecommerce: year_2__current_with_channel_shift__direct__ecommerce,
                            a2a: year_2__current_with_channel_shift__direct__a2a,
                            mobile: year_2__current_with_channel_shift__direct__mobile,
                            other_1: year_2__current_with_channel_shift__direct__other_1,
                            other_2: year_2__current_with_channel_shift__direct__other_2
                        },
                        indirect: {
                            total: year_2__current_with_channel_shift__indirect__total,
                            amadeus: year_2__current_with_channel_shift__indirect__amadeus,
                            sabre: year_2__current_with_channel_shift__indirect__sabre,
                            galileo: year_2__current_with_channel_shift__indirect__galileo,
                            abacus: year_2__current_with_channel_shift__indirect__abacus,
                            other_1: year_2__current_with_channel_shift__indirect__other_1,
                            other_2: year_2__current_with_channel_shift__indirect__other_2
                        },
                        total: year_2__current_with_channel_shift__totals
                    },
                    sita: {
                        direct: {
                            total: year_2__sita__direct__total,
                            call_centre: year_2__sita__direct__call_centre,
                            ecommerce: year_2__sita__direct__ecommerce,
                            a2a: year_2__sita__direct__a2a,
                            mobile: year_2__sita__direct__mobile,
                            other_1: year_2__sita__direct__other_1,
                            other_2: year_2__sita__direct__other_2
                        },
                        indirect: {
                            total: year_2__sita__indirect__total,
                            amadeus: year_2__sita__indirect__amadeus,
                            sabre: year_2__sita__indirect__sabre,
                            galileo: year_2__sita__indirect__galileo,
                            abacus: year_2__sita__indirect__abacus,
                            other_1: year_2__sita__indirect__other_1,
                            other_2: year_2__sita__indirect__other_2
                        },
                        total: year_2__sita__totals
                    },
                    supplier_does_not_shift__difference: year_2__difference__supplier_does_not_shift,
                    supplier_shifts__difference: year_2__difference__supplier_shifts
                },
                year_3: {
                    current: {
                        direct: {
                            total: year_3__current__direct__total,
                            call_centre: year_3__current__direct__call_centre,
                            ecommerce: year_3__current__direct__ecommerce,
                            a2a: year_3__current__direct__a2a,
                            mobile: year_3__current__direct__mobile,
                            other_1: year_3__current__direct__other_1,
                            other_2: year_3__current__direct__other_2
                        },
                        indirect: {
                            total: year_3__current__indirect__total,
                            amadeus: year_3__current__indirect__amadeus,
                            sabre: year_3__current__indirect__sabre,
                            galileo: year_3__current__indirect__galileo,
                            abacus: year_3__current__indirect__abacus,
                            other_1: year_3__current__indirect__other_1,
                            other_2: year_3__current__indirect__other_2
                        },
                        total: year_3__current__totals
                    },
                    current_with_channel_shift: {
                        direct: {
                            total: year_3__current_with_channel_shift__direct__total,
                            call_centre: year_3__current_with_channel_shift__direct__call_centre,
                            ecommerce: year_3__current_with_channel_shift__direct__ecommerce,
                            a2a: year_3__current_with_channel_shift__direct__a2a,
                            mobile: year_3__current_with_channel_shift__direct__mobile,
                            other_1: year_3__current_with_channel_shift__direct__other_1,
                            other_2: year_3__current_with_channel_shift__direct__other_2
                        },
                        indirect: {
                            total: year_3__current_with_channel_shift__indirect__total,
                            amadeus: year_3__current_with_channel_shift__indirect__amadeus,
                            sabre: year_3__current_with_channel_shift__indirect__sabre,
                            galileo: year_3__current_with_channel_shift__indirect__galileo,
                            abacus: year_3__current_with_channel_shift__indirect__abacus,
                            other_1: year_3__current_with_channel_shift__indirect__other_1,
                            other_2: year_3__current_with_channel_shift__indirect__other_2
                        },
                        total: year_3__current_with_channel_shift__totals
                    },
                    sita: {
                        direct: {
                            total: year_3__sita__direct__total,
                            call_centre: year_3__sita__direct__call_centre,
                            ecommerce: year_3__sita__direct__ecommerce,
                            a2a: year_3__sita__direct__a2a,
                            mobile: year_3__sita__direct__mobile,
                            other_1: year_3__sita__direct__other_1,
                            other_2: year_3__sita__direct__other_2
                        },
                        indirect: {
                            total: year_3__sita__indirect__total,
                            amadeus: year_3__sita__indirect__amadeus,
                            sabre: year_3__sita__indirect__sabre,
                            galileo: year_3__sita__indirect__galileo,
                            abacus: year_3__sita__indirect__abacus,
                            other_1: year_3__sita__indirect__other_1,
                            other_2: year_3__sita__indirect__other_2
                        },
                        total: year_3__sita__totals
                    },
                    supplier_does_not_shift__difference: year_3__difference__supplier_does_not_shift,
                    supplier_shifts__difference: year_3__difference__supplier_shifts
                },
                year_4: {
                    current: {
                        direct: {
                            total: year_4__current__direct__total,
                            call_centre: year_4__current__direct__call_centre,
                            ecommerce: year_4__current__direct__ecommerce,
                            a2a: year_4__current__direct__a2a,
                            mobile: year_4__current__direct__mobile,
                            other_1: year_4__current__direct__other_1,
                            other_2: year_4__current__direct__other_2
                        },
                        indirect: {
                            total: year_4__current__indirect__total,
                            amadeus: year_4__current__indirect__amadeus,
                            sabre: year_4__current__indirect__sabre,
                            galileo: year_4__current__indirect__galileo,
                            abacus: year_4__current__indirect__abacus,
                            other_1: year_4__current__indirect__other_1,
                            other_2: year_4__current__indirect__other_2
                        },
                        total: year_4__current__totals
                    },
                    current_with_channel_shift: {
                        direct: {
                            total: year_4__current_with_channel_shift__direct__total,
                            call_centre: year_4__current_with_channel_shift__direct__call_centre,
                            ecommerce: year_4__current_with_channel_shift__direct__ecommerce,
                            a2a: year_4__current_with_channel_shift__direct__a2a,
                            mobile: year_4__current_with_channel_shift__direct__mobile,
                            other_1: year_4__current_with_channel_shift__direct__other_1,
                            other_2: year_4__current_with_channel_shift__direct__other_2
                        },
                        indirect: {
                            total: year_4__current_with_channel_shift__indirect__total,
                            amadeus: year_4__current_with_channel_shift__indirect__amadeus,
                            sabre: year_4__current_with_channel_shift__indirect__sabre,
                            galileo: year_4__current_with_channel_shift__indirect__galileo,
                            abacus: year_4__current_with_channel_shift__indirect__abacus,
                            other_1: year_4__current_with_channel_shift__indirect__other_1,
                            other_2: year_4__current_with_channel_shift__indirect__other_2
                        },
                        total: year_4__current_with_channel_shift__totals
                    },
                    sita: {
                        direct: {
                            total: year_4__sita__direct__total,
                            call_centre: year_4__sita__direct__call_centre,
                            ecommerce: year_4__sita__direct__ecommerce,
                            a2a: year_4__sita__direct__a2a,
                            mobile: year_4__sita__direct__mobile,
                            other_1: year_4__sita__direct__other_1,
                            other_2: year_4__sita__direct__other_2
                        },
                        indirect: {
                            total: year_4__sita__indirect__total,
                            amadeus: year_4__sita__indirect__amadeus,
                            sabre: year_4__sita__indirect__sabre,
                            galileo: year_4__sita__indirect__galileo,
                            abacus: year_4__sita__indirect__abacus,
                            other_1: year_4__sita__indirect__other_1,
                            other_2: year_4__sita__indirect__other_2
                        },
                        total: year_4__sita__totals
                    },
                    supplier_does_not_shift__difference: year_4__difference__supplier_does_not_shift,
                    supplier_shifts__difference: year_4__difference__supplier_shifts
                },
                year_5: {
                    current: {
                        direct: {
                            total: year_5__current__direct__total,
                            call_centre: year_5__current__direct__call_centre,
                            ecommerce: year_5__current__direct__ecommerce,
                            a2a: year_5__current__direct__a2a,
                            mobile: year_5__current__direct__mobile,
                            other_1: year_5__current__direct__other_1,
                            other_2: year_5__current__direct__other_2
                        },
                        indirect: {
                            total: year_5__current__indirect__total,
                            amadeus: year_5__current__indirect__amadeus,
                            sabre: year_5__current__indirect__sabre,
                            galileo: year_5__current__indirect__galileo,
                            abacus: year_5__current__indirect__abacus,
                            other_1: year_5__current__indirect__other_1,
                            other_2: year_5__current__indirect__other_2
                        },
                        total: year_5__current__totals
                    },
                    current_with_channel_shift: {
                        direct: {
                            total: year_5__current_with_channel_shift__direct__total,
                            call_centre: year_5__current_with_channel_shift__direct__call_centre,
                            ecommerce: year_5__current_with_channel_shift__direct__ecommerce,
                            a2a: year_5__current_with_channel_shift__direct__a2a,
                            mobile: year_5__current_with_channel_shift__direct__mobile,
                            other_1: year_5__current_with_channel_shift__direct__other_1,
                            other_2: year_5__current_with_channel_shift__direct__other_2
                        },
                        indirect: {
                            total: year_5__current_with_channel_shift__indirect__total,
                            amadeus: year_5__current_with_channel_shift__indirect__amadeus,
                            sabre: year_5__current_with_channel_shift__indirect__sabre,
                            galileo: year_5__current_with_channel_shift__indirect__galileo,
                            abacus: year_5__current_with_channel_shift__indirect__abacus,
                            other_1: year_5__current_with_channel_shift__indirect__other_1,
                            other_2: year_5__current_with_channel_shift__indirect__other_2
                        },
                        total: year_5__current_with_channel_shift__totals
                    },
                    sita: {
                        direct: {
                            total: year_5__sita__direct__total,
                            call_centre: year_5__sita__direct__call_centre,
                            ecommerce: year_5__sita__direct__ecommerce,
                            a2a: year_5__sita__direct__a2a,
                            mobile: year_5__sita__direct__mobile,
                            other_1: year_5__sita__direct__other_1,
                            other_2: year_5__sita__direct__other_2
                        },
                        indirect: {
                            total: year_5__sita__indirect__total,
                            amadeus: year_5__sita__indirect__amadeus,
                            sabre: year_5__sita__indirect__sabre,
                            galileo: year_5__sita__indirect__galileo,
                            abacus: year_5__sita__indirect__abacus,
                            other_1: year_5__sita__indirect__other_1,
                            other_2: year_5__sita__indirect__other_2
                        },
                        total: year_5__sita__totals
                    },
                    supplier_does_not_shift__difference: year_5__difference__supplier_does_not_shift,
                    supplier_shifts__difference: year_5__difference__supplier_shifts
                },
                total__supplier_does_not_shift__difference: total__difference__supplier_does_not_shift,
                total__supplier_shifts__difference: total__difference__supplier_shifts
            };
        },
        initObject: function() {
            if (inputData.services && !inputData.services.op3) return allData.channel_shift.high = 0, 
            allData.channel_shift.low = 0, void (allData.channel_shift.summary = {}); else return allData.channel_shift.high = this.result("high"), 
            allData.channel_shift.low = this.result("low"), void (allData.channel_shift.summary = {
                name: "Channel Shift"
            });
        },
        result: function(value) {
            if ("high" === value) return Math.round(this.costs().total__supplier_does_not_shift__difference / inputData.adjustment / 5); else return Math.round(this.costs().total__supplier_shifts__difference / inputData.adjustment / 5);
        }
    };
}).factory("ancillarySales", function(inputData, allData, channelShift) {
    return {
        MISC_PERCENTAGE_1_HIGH: .04,
        MISC_PERCENTAGE_1_LOW: .02,
        PERCENTAGES: {
            ECOMMERCE: {
                Y1: .003,
                Y2: .004,
                Y3: .006,
                Y4: .008,
                Y5: .008
            },
            CALL_CENTRE: {
                Y1: 2e-4,
                Y2: 8e-4,
                Y3: .0012,
                Y4: .0015,
                Y5: .0015
            },
            MOBILE: {
                Y1: 2e-4,
                Y2: 8e-4,
                Y3: .0012,
                Y4: .0015,
                Y5: .0015
            }
        },
        ecommerceRevenueY1: function() {
            return parseInt(Math.round(inputData.param6 * channelShift.direct().ecommerce.year_1.perc_pax_boarded), 10);
        },
        ecommerceRevenueY2: function() {
            return parseInt(Math.round(inputData.param6 * channelShift.direct().ecommerce.year_2.perc_pax_boarded), 10);
        },
        ecommerceRevenueY3: function() {
            return parseInt(Math.round(inputData.param6 * channelShift.direct().ecommerce.year_3.perc_pax_boarded), 10);
        },
        ecommerceRevenueY4: function() {
            return parseInt(Math.round(inputData.param6 * channelShift.direct().ecommerce.year_4.perc_pax_boarded), 10);
        },
        ecommerceRevenueY5: function() {
            return parseInt(Math.round(inputData.param6 * channelShift.direct().ecommerce.year_5.perc_pax_boarded), 10);
        },
        callCentreRevenueY1: function() {
            return inputData.param6 * channelShift.direct().call_centre.year_1.perc_pax_boarded;
        },
        callCentreRevenueY2: function() {
            return inputData.param6 * channelShift.direct().call_centre.year_2.perc_pax_boarded;
        },
        callCentreRevenueY3: function() {
            return inputData.param6 * channelShift.direct().call_centre.year_3.perc_pax_boarded;
        },
        callCentreRevenueY4: function() {
            return inputData.param6 * channelShift.direct().call_centre.year_4.perc_pax_boarded;
        },
        callCentreRevenueY5: function() {
            return inputData.param6 * channelShift.direct().call_centre.year_5.perc_pax_boarded;
        },
        salesYear: function(year, val) {
            var misc_percentage_1 = 0;
            if ("high" === val) misc_percentage_1 = this.MISC_PERCENTAGE_1_HIGH; else misc_percentage_1 = this.MISC_PERCENTAGE_1_LOW;
            var ecommerceRevenue, callCentreRevenue, ecommerceSalesPercentage, callCentreSalesPercentage, mobileSalesPercentage;
            switch (year) {
              case 1:
                ecommerceRevenue = this.ecommerceRevenueY1(), callCentreRevenue = this.callCentreRevenueY1(), 
                ecommerceSalesPercentage = this.PERCENTAGES.ECOMMERCE.Y1, callCentreSalesPercentage = this.PERCENTAGES.CALL_CENTRE.Y1, 
                mobileSalesPercentage = this.PERCENTAGES.MOBILE.Y1;
                break;

              case 2:
                ecommerceRevenue = this.ecommerceRevenueY2(), callCentreRevenue = this.callCentreRevenueY2(), 
                ecommerceSalesPercentage = this.PERCENTAGES.ECOMMERCE.Y2, callCentreSalesPercentage = this.PERCENTAGES.CALL_CENTRE.Y2, 
                mobileSalesPercentage = this.PERCENTAGES.MOBILE.Y2;
                break;

              case 3:
                ecommerceRevenue = this.ecommerceRevenueY3(), callCentreRevenue = this.callCentreRevenueY3(), 
                ecommerceSalesPercentage = this.PERCENTAGES.ECOMMERCE.Y3, callCentreSalesPercentage = this.PERCENTAGES.CALL_CENTRE.Y3, 
                mobileSalesPercentage = this.PERCENTAGES.MOBILE.Y3;
                break;

              case 4:
                ecommerceRevenue = this.ecommerceRevenueY4(), callCentreRevenue = this.callCentreRevenueY4(), 
                ecommerceSalesPercentage = this.PERCENTAGES.ECOMMERCE.Y4, callCentreSalesPercentage = this.PERCENTAGES.CALL_CENTRE.Y4, 
                mobileSalesPercentage = this.PERCENTAGES.MOBILE.Y4;
                break;

              case 5:
                ecommerceRevenue = this.ecommerceRevenueY5(), callCentreRevenue = this.callCentreRevenueY5(), 
                ecommerceSalesPercentage = this.PERCENTAGES.ECOMMERCE.Y5, callCentreSalesPercentage = this.PERCENTAGES.CALL_CENTRE.Y5, 
                mobileSalesPercentage = this.PERCENTAGES.MOBILE.Y5;
            }
            var calculation = function(revenue, percentage_1, percentage_2) {
                return revenue * percentage_1 * percentage_2;
            }, ecommerceSales = calculation(ecommerceRevenue, misc_percentage_1, ecommerceSalesPercentage), callCentreSales = calculation(callCentreRevenue, misc_percentage_1, callCentreSalesPercentage), mobileSales = calculation(0, misc_percentage_1, mobileSalesPercentage), totals = ecommerceSales + callCentreSales + mobileSales;
            return {
                ecommerce: {
                    name: "Ecommerce",
                    unit: "currency",
                    value: Math.round(ecommerceSales)
                },
                call_centre: {
                    name: "Call centre",
                    unit: "currency",
                    value: Math.round(callCentreSales)
                },
                mobile: {
                    name: "Mobile",
                    unit: "currency",
                    value: Math.round(mobileSales)
                },
                total: {
                    name: "Total",
                    unit: "currency",
                    value: Math.round(totals)
                }
            };
        },
        ancillarySalesRevenueYears: function() {
            return {
                year_1: {
                    name: "Year 1",
                    high: this.salesYear(1, "high"),
                    low: this.salesYear(1, "low")
                },
                year_2: {
                    name: "Year 2",
                    high: this.salesYear(2, "high"),
                    low: this.salesYear(2, "low")
                },
                year_3: {
                    name: "Year 3",
                    high: this.salesYear(3, "high"),
                    low: this.salesYear(3, "low")
                },
                year_4: {
                    name: "Year 4",
                    high: this.salesYear(4, "high"),
                    low: this.salesYear(4, "low")
                },
                year_5: {
                    name: "Year 5",
                    high: this.salesYear(5, "high"),
                    low: this.salesYear(5, "low")
                }
            };
        },
        ancillarySalesRevenueTotals: function() {
            var sales = this.ancillarySalesRevenueYears(), total_high = sales.year_1.high.total.value + sales.year_2.high.total.value + sales.year_3.high.total.value + sales.year_4.high.total.value + sales.year_5.high.total.value, total_low = sales.year_1.low.total.value + sales.year_2.low.total.value + sales.year_3.low.total.value + sales.year_4.low.total.value + sales.year_5.low.total.value;
            return {
                high: total_high,
                low: total_low
            };
        },
        ancillarySalesRevenue: function() {
            var newObj = {
                years: {},
                totals: {}
            };
            return newObj.years = this.ancillarySalesRevenueYears(), newObj.totals = this.ancillarySalesRevenueTotals(), 
            newObj;
        },
        chartValue: function(value) {
            var result;
            if ("high" === value) result = this.ancillarySalesRevenue().totals.high; else result = this.ancillarySalesRevenue().totals.low;
            return result;
        },
        initObject: function() {
            if (inputData.services && !inputData.services.op4) return allData.ancillary_sales.high = 0, 
            allData.ancillary_sales.low = 0, void (allData.ancillary_sales.summary = {}); else return allData.ancillary_sales.high = this.result("high"), 
            allData.ancillary_sales.low = this.result("low"), void (allData.ancillary_sales.summary = this.ancillarySalesRevenue());
        },
        result: function(value) {
            return Math.round(this.chartValue(value) / inputData.adjustment / 5);
        }
    };
}), angular.module("myApp.controllers", []).controller("InfoCtrl", [ "$rootScope", "$scope", "localStorageService", "infoData", "$interval", function($rootScope, $scope, localStorageService, infoData, $interval) {
    $scope.$on("clearInfoData", function(event, msg) {
        if (msg === !0) infoData.currency = {
            currency: "USD",
            symbol: "$"
        }, infoData.airline = {
            code: ""
        }, infoData.opportunity = {
            name: ""
        }, infoData.session = {
            name: ""
        }, localStorageService.clearAll();
    }), $scope.$on("isLoggedInMessage", function(event, msg) {
        infoData.loggedIn = msg;
    }), $scope.OfflineState = "down", $interval(function() {
        $scope.OfflineState = Offline.state;
    }, 200), $scope.resizeContentWrapper = function(ele_id) {
        if ($scope.winHeight = document.documentElement.clientHeight, ele_id) ele_id.setAttribute("style", "height: " + $scope.winHeight + "px");
    };
    var wrap = document.getElementById("wrap");
    $(window).resize(function() {
        $scope.resizeContentWrapper(wrap);
    }), $scope.resizeContentWrapper(wrap), $scope.updateInfo = function() {
        $scope.info.date = {
            timestamp: Math.round(new Date().getTime() / 1e3),
            date: new Date().toISOString()
        }, $scope.setCurrency(), localStorageService.set("info", $scope.info);
    }, $scope.$watch(function() {
        return infoData;
    }, function() {
        $scope.info = infoData, $scope.updateInfo();
    }, !0), $scope.currency_symbols = {
        Dollar: "$",
        Euro: "€",
        "Colón": "₡",
        Pound: "£",
        Sheqel: "₪",
        Rupee: "₹",
        Yen: "¥",
        Won: "₩",
        Naira: "₦",
        Peso: "₱",
        Zloty: "zł",
        Guarani: "₲",
        Baht: "฿",
        Hryvnia: "₴",
        Dong: "₫"
    }, $scope.setCurrency = function() {
        var currency_symbols = {
            ARS: $scope.currency_symbols.Dollar,
            AUD: $scope.currency_symbols.Dollar,
            USD: $scope.currency_symbols.Dollar,
            EUR: $scope.currency_symbols.Euro,
            CRC: $scope.currency_symbols["Colón"],
            EGP: $scope.currency_symbols.Pound,
            FKP: $scope.currency_symbols.Pound,
            GIP: $scope.currency_symbols.Pound,
            GBP: $scope.currency_symbols.Pound,
            ILS: $scope.currency_symbols.Sheqel,
            INR: $scope.currency_symbols.Rupee,
            JPY: $scope.currency_symbols.Yen,
            KRW: $scope.currency_symbols.Won,
            NGN: $scope.currency_symbols.Naira,
            PHP: $scope.currency_symbols.Peso,
            PLN: $scope.currency_symbols.Zloty,
            PYG: $scope.currency_symbols.Guarani,
            THB: $scope.currency_symbols.Baht,
            UAH: $scope.currency_symbols.Hryvnia,
            VND: $scope.currency_symbols.Dong
        };
        if ($scope.info) {
            var selected_currency = $scope.info.currency;
            if (selected_currency) if (void 0 === currency_symbols[selected_currency.currency]) $scope.info.currency.symbol = "(" + selected_currency.currency + ")"; else $scope.info.currency.symbol = currency_symbols[selected_currency.currency]; else $scope.info.currency = {
                currency: "USD",
                symbol: "$"
            }, $scope.setCurrency();
        }
    }, $scope.$on("$stateChangeSuccess", function(event, toState) {
        switch (toState.name) {
          case "home":
            $scope.navActive = "home";
            break;

          case "info":
            $scope.navActive = "info";
            break;

          case "new-calculation":
            $scope.navActive = "new";
            break;

          case "calculator.index":
            $scope.navActive = "calculator";
            break;

          case "calculator.chart_high":
            $scope.navActive = "calculator";
            break;

          case "calculator.chart_low":
            $scope.navActive = "calculator";
            break;

          case "calculator.test":
            $scope.navActive = "calculator";
            break;

          case "saved-calculations":
            $scope.navActive = "my-calculations";
            break;

          case "saved-calculations-detail":
            $scope.navActive = "my-calculations";
            break;

          case "clear-data":
            $scope.navActive = "settings";
            break;

          case "auth":
            $scope.navActive = "auth";
        }
    });
} ]).controller("ClearDataCtrl", [ "$scope", "$window", "localStorageService", "$location", "infoData", "inputData", "allData", "$state", "$timeout", "$templateCache", function($scope, $window, localStorageService, $location, infoData, inputData, allData, $state, $timeout, $templateCache) {
    $scope.orig = angular.copy($scope.input), $scope.confirmClearData = function() {
        localStorageService.clearAll(), $scope.input = angular.copy($scope.orig), $templateCache.removeAll(), 
        infoData = {}, inputData = {}, allData = {}, $scope.info = {
            data: "reset"
        }, $scope.input = {
            data: "reset"
        }, $state.transitionTo("clear-data-confirm"), $timeout(function() {
            $window.location.reload();
        }, 10);
    }, $scope.startOver = function() {
        $state.go("info");
    };
} ]).controller("ListSessionCtrl", [ "$scope", "$state", "localStorageService", "$modal", "$timeout", "infoData", "inputData", "allData", "$location", "$firebase", function($scope, $state, localStorageService, $modal, $timeout, infoData, inputData, allData, $location, $firebase) {
    $scope.createNewSession = function() {
        $state.go("new-calculation"), $scope.$emit("createNewSession", !0);
    };
    var fb_base_url = "https://luminous-fire-1327.firebaseio.com", auth_ref = new Firebase(fb_base_url), authData = auth_ref.getAuth(), num_uid = function() {
        var uid = authData.uid, result = uid.split(":");
        return result[1];
    };
    if (authData) {
        var url = fb_base_url + "/user_data/" + num_uid() + "/", ref = new Firebase(url), sync = $firebase(ref), items = sync.$asArray();
        items.$loaded().then(function() {
            $scope.items = items, $scope.load_status = "loaded", $scope.ele_load_status = "show_on_loaded";
        }), $scope.current_key = localStorageService.get("current_key"), $scope.load_status = "loading", 
        $scope.ele_load_status = "hide_on_loading", $scope.sessionCount = function() {
            return items.length;
        }, $scope.deleteSession = function(id) {
            var itemRef = new Firebase(url + "/" + id), onComplete = function(error) {
                if (error) console.log("Sync failed"); else $scope.deleteItemId = id, $state.go("saved-calculations");
            };
            itemRef.remove(onComplete);
        }, $scope.copySession = function(id) {
            var url = fb_base_url + "/user_data/" + num_uid() + "/" + id, ref = new Firebase(url), sync = $firebase(ref), items = sync.$asObject();
            items.$loaded().then(function() {
                var copy_of_data = items.data, copy_of_info = items.info, copy_of_input = items.input;
                copy_of_info.date = {
                    timestamp: Math.round(new Date().getTime() / 1e3),
                    date: new Date().toISOString()
                }, $scope.items.$add({
                    data: copy_of_data,
                    info: copy_of_info,
                    input: copy_of_input
                });
            });
        }, $scope.useSession = function(id) {
            $scope.id = id;
            $modal.open({
                templateUrl: "useSession.html",
                controller: "ModalConfirmUseCtrl",
                size: "sm",
                resolve: {
                    id: function() {
                        return id;
                    }
                }
            });
        };
    } else $state.go("auth");
} ]).controller("ModalConfirmUseCtrl", [ "$scope", "$window", "localStorageService", "$state", "allData", "infoData", "inputData", "$modalInstance", "id", "$firebase", function($scope, $window, localStorageService, $state, allData, infoData, inputData, $modalInstance, id, $firebase) {
    $scope.id = id, $scope.ok = function() {
        var fb_base_url = "https://luminous-fire-1327.firebaseio.com", auth_ref = new Firebase(fb_base_url), authData = auth_ref.getAuth(), num_uid = function() {
            var uid = authData.uid, result = uid.split(":");
            return result[1];
        };
        if (authData) {
            var url = fb_base_url + "/user_data/" + num_uid() + "/" + id, ref = new Firebase(url), sync = $firebase(ref), item = sync.$asObject();
            item.$loaded().then(function() {
                localStorageService.set("data", item.data), localStorageService.set("info", item.info), 
                localStorageService.set("input", item.input), allData = item.data, infoData = item.info, 
                inputData = item.input, localStorageService.set("current_key", id), $scope.current_key = localStorageService.get("current_key"), 
                infoData.running_session = !0, $window.location.reload(), $modalInstance.close();
            });
        } else $state.go("auth");
    }, $scope.cancel = function() {
        $modalInstance.dismiss("cancel");
    };
} ]).controller("SessionsDetailCtrl", [ "$rootScope", "$scope", "$routeParams", "$firebase", "$firebaseAuth", "Authorisation", "$state", "$stateParams", "chartData", function($rootScope, $scope, $routeParams, $firebase, $firebaseAuth, Authorisation, $state, $stateParams, chartData) {
    var fb_base_url = "https://luminous-fire-1327.firebaseio.com", auth_ref = new Firebase(fb_base_url), authData = auth_ref.getAuth(), num_uid = function() {
        var uid = authData.uid, result = uid.split(":");
        return result[1];
    };
    if (authData) {
        var url = fb_base_url + "/user_data/" + num_uid() + "/" + $stateParams.id, ref = new Firebase(url), sync = $firebase(ref), item = sync.$asObject();
        item.$loaded().then(function() {
            if ($scope.item = item, $scope.item.data) var data = $scope.item.data; else var data = chartData.chartObj;
            $scope.currency = item.info.currency.symbol, chartData.currency = $scope.currency, 
            $scope.updateData = function() {
                if ($scope.revenue_integrity = data.revenue_integrity, $scope.revenue_integrity_process_improvement = data.revenue_integrity_process_improvement, 
                $scope.cmap = data.cmap, $scope.origin_and_destination = data.origin_and_destination, 
                $scope.pos = data.pos, $scope.arr = data.arr, $scope.airfare_insight = data.airfare_insight, 
                "saved-calculations-detail.chart_low" === $state.current.name) $scope.chartConfigLow = chartData.drawChart("low", data); else $scope.chartConfigHigh = chartData.drawChart("high", data);
            }, $scope.updateData(), $state.go("saved-calculations-detail.chart_high"), $rootScope.$on("$stateChangeSuccess", function() {
                $scope.updateData();
            });
        });
    } else $state.go("auth");
} ]).controller("SessionsCtrl", [ "$scope", "FbService", "FbService2", function($scope, FbService, FbService2) {
    $scope.fbtest = function() {
        $scope.text.sum = 0, FbService2.$bind($scope, "text");
    }, $scope.sum = function(num, num2) {
        return parseInt(num + num2);
    };
} ]).controller("NewSessionCtrl", [ "$scope", "localStorageService", "inputData", "infoData", "allData", "$state", "$timeout", "$window", function($scope, localStorageService, inputData, infoData, allData, $state, $timeout, $window) {
    $scope.$on("createNewSession", function() {
        $scope.createNewSession();
    }), $scope.createNewSession = function() {
        if (runningSession()) return confirmOverwrite(), $state.go("info"), !0; else return $state.go("info"), 
        !1;
    }, $scope.info.running_session = null !== localStorageService.get("current_key") ? !0 : !1;
    var runningSession = function() {
        return $scope.info.running_session;
    }, confirmOverwrite = function() {
        return $scope.wipeData();
    };
    $scope.wipeData = function() {
        return clearInfoData(), clearLocalStorage(), clearInputData(), !0;
    };
    var clearInfoData = function() {
        $scope.$emit("clearInfoData", !0);
    }, clearInputData = function() {
        $timeout(function() {
            $window.location.reload();
        }, 10);
    }, clearLocalStorage = function() {
        return localStorageService.clearAll();
    };
} ]).controller("SaveSessionCtrl", [ "$scope", "$state", "localStorageService", "$firebase", "$timeout", "infoData", "inputData", "allData", function($scope, $state, localStorageService, $firebase, $timeout) {
    $scope.info.running_session = null !== localStorageService.get("current_key") ? !0 : !1, 
    $scope.saving = !1, $scope.saved = !1;
    var fb_base_url = "https://luminous-fire-1327.firebaseio.com", auth_ref = new Firebase(fb_base_url), authData = auth_ref.getAuth(), num_uid = function() {
        var uid = authData.uid, result = uid.split(":");
        return result[1];
    };
    if (!authData) $state.go("auth");
    $scope.saveNewSession = function() {
        if (authData) {
            $scope.saving = !0;
            var url = fb_base_url + "/user_data/" + num_uid() + "/", ref = new Firebase(url), sync = $firebase(ref), items = sync.$asArray();
            items.$add({
                info: localStorageService.get("info")
            }).then(function(reference) {
                localStorageService.set("current_key", reference.name()), $scope.info.running_session = !0, 
                $scope.saving = !1, $scope.saved = !0, $timeout(function() {
                    $scope.saved = !1;
                }, 2500);
            });
        } else $state.go("auth");
    }, $scope.updateSession = function() {
        if (authData) {
            if ($scope.info.running_session === !0) {
                $scope.saving = !0;
                var url = fb_base_url + "/user_data/" + num_uid() + "/" + localStorageService.get("current_key"), ref = new Firebase(url), sync = $firebase(ref), obj = sync.$asObject();
                obj.$bindTo($scope, "fb").then(function() {
                    $scope.fb.info = localStorageService.get("info"), $scope.fb.input = localStorageService.get("input"), 
                    $scope.fb.data = localStorageService.get("data");
                }).then(function() {
                    $scope.saving = !1, $scope.saved = !0, $timeout(function() {
                        $scope.saved = !1;
                    }, 2500);
                });
            }
        } else $state.go("auth");
    };
} ]).controller("CalcCtrl", [ "$rootScope", "$scope", "$location", "localStorageService", "$state", "chartData", "chartConfig", "infoData", "inputData", "allData", "revenueIntegrity", "revenueIntegrityProcessImprovement", "cmap", "originAndDestination", "pointOfSale", "passengersBoardedData", "arr", "airfareInsight", "channelShift", "ancillarySales", "$firebase", "$interval", function($rootScope, $scope, $location, localStorageService, $state, chartData, chartConfig, infoData, inputData, allData, revenueIntegrity, revenueIntegrityProcessImprovement, cmap, originAndDestination, pointOfSale, passengersBoardedData, arr, airfareInsight, channelShift, ancillarySales, $firebase) {
    var fb_base_url = "https://luminous-fire-1327.firebaseio.com", auth_ref = new Firebase(fb_base_url), authData = auth_ref.getAuth(), num_uid = function() {
        var uid = authData.uid, result = uid.split(":");
        return result[1];
    }, syncToFirebase = function() {
        if (authData) {
            if ($scope.info.running_session === !0) {
                $scope.saving = !0;
                var fb_base_url = "https://luminous-fire-1327.firebaseio.com", url = fb_base_url + "/user_data/" + num_uid() + "/" + localStorageService.get("current_key"), ref = new Firebase(url), obj = $firebase(ref);
                obj.$set({
                    info: localStorageService.get("info"),
                    input: localStorageService.get("input"),
                    data: localStorageService.get("data")
                });
            }
        } else $state.go("auth");
    };
    syncToFirebase(), $scope.updateData = function() {
        if (revenueIntegrity.initObject(), $scope.revenue_integrity = allData.revenue_integrity, 
        revenueIntegrityProcessImprovement.initObject(), $scope.revenue_integrity_process_improvement = allData.revenue_integrity_process_improvement, 
        channelShift.initObject(), $scope.channel_shift = allData.channel_shift, ancillarySales.initObject(), 
        $scope.ancillary_sales = allData.ancillary_sales, cmap.initObject(), $scope.cmap = allData.cmap, 
        originAndDestination.initObject(), $scope.origin_and_destination = allData.origin_and_destination, 
        pointOfSale.initObject(), $scope.pos = allData.pos, arr.initObject(), $scope.arr = allData.arr, 
        airfareInsight.initObject(), $scope.airfare_insight = allData.airfare_insight, localStorageService.set("data", allData), 
        localStorageService.set("input", inputData), $scope.input = inputData, syncToFirebase(), 
        "calculator.chart_low" === $state.current.name) $scope.chartConfigLow = chartData.drawChart("low", localStorageService.get("data")); else $scope.chartConfigHigh = chartData.drawChart("high", localStorageService.get("data"));
    }, $scope.updateData(), $scope.pb_data = passengersBoardedData, $scope.$on("$stateChangeSuccess", function(event, toState) {
        localStorageService.set("results_view", toState), $scope.resultsView = toState.name, 
        $scope.updateData();
    }), $scope.$watch(function() {
        return inputData;
    }, function() {
        $scope.updateData();
    }, !0), $scope.currency = infoData.currency.symbol, chartData.currency = $scope.currency;
} ]).controller("AuthCtrl", [ "$rootScope", "$scope", "$state", "$firebase", "Authorisation", function($rootScope, $scope, $state) {
    var fb_base_url = "https://luminous-fire-1327.firebaseio.com", ref = new Firebase(fb_base_url), authData = ref.getAuth();
    if (authData) $scope.$emit("isLoggedInMessage", !0), $scope.user = authData.password, 
    $scope.logged_in = !0; else $scope.$emit("isLoggedInMessage", !1), $scope.logged_in = !1;
    $scope.loginUser = function() {
        $scope.show_loader = !0, ref.authWithPassword({
            email: $scope.auth.email,
            password: $scope.auth.password
        }, function(error) {
            if (error) switch ($scope.show_loader = !1, $scope.message = "Login failed", error.code) {
              case "INVALID_EMAIL":
                $scope.reason = "The specified email address is incorrect.";
                break;

              case "INVALID_USER":
                $scope.reason = "The specified user does not exist.";
                break;

              case "INVALID_PASSWORD":
                $scope.reason = "The specified password is incorrect";
                break;

              case "UNKNOWN_ERROR":
                $scope.reason = "An unknown error occurred. Please contact support@firebase.com.";
                break;

              case "USER_DENIED":
                $scope.reason = "User denied authentication request.";
            } else $scope.show_loader = !1, $scope.logged_in = !0, $scope.$emit("isLoggedInMessage", !0), 
            $state.go("info");
        });
    }, $scope.logoutUser = function() {
        $scope.logged_in = !1, $scope.$emit("isLoggedInMessage", !1), $scope.$emit("clearInfoData", !0), 
        $scope.message = "", ref.unauth();
    }, $scope.retrievePassword = function() {
        $scope.show_loader = !0;
        var ref = new Firebase("https://luminous-fire-1327.firebaseio.com/");
        ref.resetPassword({
            email: $scope.auth.email
        }, function(error) {
            if (error) switch (error.code) {
              case "INVALID_USER":
                $scope.reason = "The specified user account does not exist.";
                break;

              default:
                $scope.reason = "Error resetting password" + error;
            } else $scope.show_loader = !1, $scope.message = !0, $scope.reason = "Password reset email sent successfully!";
        });
    }, $scope.changePassword = function() {
        $scope.show_loader = !0;
        var ref = new Firebase("https://luminous-fire-1327.firebaseio.com/");
        ref.changePassword({
            email: $scope.auth.email,
            oldPassword: $scope.auth.old_password,
            newPassword: $scope.auth.new_password
        }, function(error) {
            if (error) switch (error.code) {
              case "INVALID_PASSWORD":
                $scope.reason = "The specified user account password is incorrect.";
                break;

              case "INVALID_USER":
                $scope.reason = "The specified user account does not exist.";
                break;

              default:
                $scope.reason = "Error changing password:" + error;
            } else $scope.show_loader = !1, $scope.message = !0, $scope.reason = "User password changed successfully!";
        });
    };
} ]);